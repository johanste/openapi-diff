[
  {
    "kind": "E",
    "path": [
      "info",
      "title"
    ],
    "lhs": "KeyVaultClient",
    "rhs": "Key Vault"
  },
  {
    "kind": "E",
    "path": [
      "info",
      "description"
    ],
    "lhs": "The key vault client performs cryptographic key operations and vault operations against the Key Vault service.",
    "rhs": "The key vault client performs cryptographic key operations and vault operations\nagainst the Key Vault service."
  },
  {
    "kind": "N",
    "path": [
      "info",
      "x-typespec-generated"
    ],
    "rhs": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  {
    "kind": "D",
    "path": [
      "x-ms-parameterized-host",
      "positionInOperation"
    ],
    "lhs": "first"
  },
  {
    "kind": "D",
    "path": [
      "x-ms-parameterized-host",
      "parameters",
      0,
      "description"
    ],
    "lhs": "The vault name, for example https://myvault.vault.azure.net."
  },
  {
    "kind": "N",
    "path": [
      "x-ms-parameterized-host",
      "parameters",
      0,
      "format"
    ],
    "rhs": "uri"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/storage"
    ],
    "lhs": {
      "get": {
        "tags": [
          "Storage"
        ],
        "operationId": "GetStorageAccounts",
        "description": "List storage accounts managed by the specified key vault. This operation requires the storage/list permission.",
        "parameters": [
          {
            "name": "maxresults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 25,
            "description": "Maximum number of results to return in a page. If not specified the service will return up to 25 results."
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A response message containing a list of storage accounts along with a link to the next page of storage accounts.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Storage identifier.",
                        "readOnly": true
                      },
                      "resourceId": {
                        "type": "string",
                        "description": "Storage account resource Id.",
                        "readOnly": true
                      },
                      "attributes": {
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "description": "the enabled state of the object."
                          },
                          "created": {
                            "type": "integer",
                            "format": "unixtime",
                            "readOnly": true,
                            "description": "Creation time in UTC."
                          },
                          "updated": {
                            "type": "integer",
                            "format": "unixtime",
                            "readOnly": true,
                            "description": "Last updated time in UTC."
                          },
                          "recoverableDays": {
                            "type": "integer",
                            "format": "int32",
                            "readOnly": true,
                            "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete enabled, otherwise 0."
                          },
                          "recoveryLevel": {
                            "type": "string",
                            "description": "Reflects the deletion recovery level currently in effect for storage accounts in the current vault. If it contains 'Purgeable' the storage account can be permanently deleted by a privileged user; otherwise, only the system can purge the storage account, at the end of the retention interval.",
                            "enum": [
                              "Purgeable",
                              "Recoverable+Purgeable",
                              "Recoverable",
                              "Recoverable+ProtectedSubscription",
                              "CustomizedRecoverable+Purgeable",
                              "CustomizedRecoverable",
                              "CustomizedRecoverable+ProtectedSubscription"
                            ],
                            "x-ms-enum": {
                              "name": "DeletionRecoveryLevel",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Purgeable",
                                  "description": "Denotes a vault state in which deletion is an irreversible operation, without the possibility for recovery. This level corresponds to no protection being available against a Delete operation; the data is irretrievably lost upon accepting a Delete operation at the entity level or higher (vault, resource group, subscription etc.)"
                                },
                                {
                                  "value": "Recoverable+Purgeable",
                                  "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval (90 days), unless a Purge operation is requested, or the subscription is cancelled. System wil permanently delete it after 90 days, if not recovered"
                                },
                                {
                                  "value": "Recoverable",
                                  "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval(90 days) and while the subscription is still available. System wil permanently delete it after 90 days, if not recovered"
                                },
                                {
                                  "value": "Recoverable+ProtectedSubscription",
                                  "description": "Denotes a vault and subscription state in which deletion is recoverable within retention interval (90 days), immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself  cannot be permanently canceled. System wil permanently delete it after 90 days, if not recovered"
                                },
                                {
                                  "value": "CustomizedRecoverable+Purgeable",
                                  "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90). This level guarantees the recoverability of the deleted entity during the retention interval, unless a Purge operation is requested, or the subscription is cancelled."
                                },
                                {
                                  "value": "CustomizedRecoverable",
                                  "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the deleted entity during the retention interval and while the subscription is still available."
                                },
                                {
                                  "value": "CustomizedRecoverable+ProtectedSubscription",
                                  "description": "Denotes a vault and subscription state in which deletion is recoverable, immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself cannot be permanently canceled when 7<= SoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the deleted entity during the retention interval, and also reflects the fact that the subscription itself cannot be cancelled."
                                }
                              ]
                            },
                            "readOnly": true,
                            "x-nullable": false
                          }
                        },
                        "description": "The storage account management attributes."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Application specific metadata in the form of key-value pairs.",
                        "readOnly": true
                      }
                    },
                    "description": "The storage account item containing storage account metadata."
                  },
                  "readOnly": true,
                  "description": "A response message containing a list of storage accounts in the key vault along with a link to the next page of storage accounts."
                },
                "nextLink": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The URL to get the next set of storage accounts."
                }
              },
              "description": "The storage accounts list result."
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Storage account": {
            "$ref": "./examples/listStorageAccount.json"
          }
        }
      }
    }
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/deletedstorage"
    ],
    "lhs": {
      "get": {
        "tags": [
          "DeletedStorage"
        ],
        "operationId": "GetDeletedStorageAccounts",
        "summary": "Lists deleted storage accounts for the specified vault.",
        "description": "The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.",
        "parameters": [
          {
            "name": "maxresults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 25,
            "description": "Maximum number of results to return in a page. If not specified the service will return up to 25 results."
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A response message containing a list of deleted storage accounts in the vault, along with a link to the next page of deleted storage accounts.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Storage identifier.",
                            "readOnly": true
                          },
                          "resourceId": {
                            "type": "string",
                            "description": "Storage account resource Id.",
                            "readOnly": true
                          },
                          "attributes": {
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "description": "the enabled state of the object."
                              },
                              "created": {
                                "type": "integer",
                                "format": "unixtime",
                                "readOnly": true,
                                "description": "Creation time in UTC."
                              },
                              "updated": {
                                "type": "integer",
                                "format": "unixtime",
                                "readOnly": true,
                                "description": "Last updated time in UTC."
                              },
                              "recoverableDays": {
                                "type": "integer",
                                "format": "int32",
                                "readOnly": true,
                                "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete enabled, otherwise 0."
                              },
                              "recoveryLevel": {
                                "type": "string",
                                "description": "Reflects the deletion recovery level currently in effect for storage accounts in the current vault. If it contains 'Purgeable' the storage account can be permanently deleted by a privileged user; otherwise, only the system can purge the storage account, at the end of the retention interval.",
                                "enum": [
                                  "Purgeable",
                                  "Recoverable+Purgeable",
                                  "Recoverable",
                                  "Recoverable+ProtectedSubscription",
                                  "CustomizedRecoverable+Purgeable",
                                  "CustomizedRecoverable",
                                  "CustomizedRecoverable+ProtectedSubscription"
                                ],
                                "x-ms-enum": {
                                  "name": "DeletionRecoveryLevel",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Purgeable",
                                      "description": "Denotes a vault state in which deletion is an irreversible operation, without the possibility for recovery. This level corresponds to no protection being available against a Delete operation; the data is irretrievably lost upon accepting a Delete operation at the entity level or higher (vault, resource group, subscription etc.)"
                                    },
                                    {
                                      "value": "Recoverable+Purgeable",
                                      "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval (90 days), unless a Purge operation is requested, or the subscription is cancelled. System wil permanently delete it after 90 days, if not recovered"
                                    },
                                    {
                                      "value": "Recoverable",
                                      "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval(90 days) and while the subscription is still available. System wil permanently delete it after 90 days, if not recovered"
                                    },
                                    {
                                      "value": "Recoverable+ProtectedSubscription",
                                      "description": "Denotes a vault and subscription state in which deletion is recoverable within retention interval (90 days), immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself  cannot be permanently canceled. System wil permanently delete it after 90 days, if not recovered"
                                    },
                                    {
                                      "value": "CustomizedRecoverable+Purgeable",
                                      "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90). This level guarantees the recoverability of the deleted entity during the retention interval, unless a Purge operation is requested, or the subscription is cancelled."
                                    },
                                    {
                                      "value": "CustomizedRecoverable",
                                      "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the deleted entity during the retention interval and while the subscription is still available."
                                    },
                                    {
                                      "value": "CustomizedRecoverable+ProtectedSubscription",
                                      "description": "Denotes a vault and subscription state in which deletion is recoverable, immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself cannot be permanently canceled when 7<= SoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the deleted entity during the retention interval, and also reflects the fact that the subscription itself cannot be cancelled."
                                    }
                                  ]
                                },
                                "readOnly": true,
                                "x-nullable": false
                              }
                            },
                            "description": "The storage account management attributes."
                          },
                          "tags": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Application specific metadata in the form of key-value pairs.",
                            "readOnly": true
                          }
                        },
                        "description": "The storage account item containing storage account metadata."
                      }
                    ],
                    "properties": {
                      "recoveryId": {
                        "type": "string",
                        "description": "The url of the recovery object, used to identify and recover the deleted storage account."
                      },
                      "scheduledPurgeDate": {
                        "type": "integer",
                        "format": "unixtime",
                        "readOnly": true,
                        "description": "The time when the storage account is scheduled to be purged, in UTC"
                      },
                      "deletedDate": {
                        "type": "integer",
                        "format": "unixtime",
                        "readOnly": true,
                        "description": "The time when the storage account was deleted, in UTC"
                      }
                    },
                    "description": "The deleted storage account item containing metadata about the deleted storage account."
                  },
                  "readOnly": true,
                  "description": "A response message containing a list of the deleted storage accounts in the vault along with a link to the next page of deleted storage accounts"
                },
                "nextLink": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The URL to get the next set of deleted storage accounts."
                }
              },
              "description": "The deleted storage account list result"
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Deleted Storage Accounts": {
            "$ref": "./examples/listDeletedStorageAccount.json"
          }
        }
      }
    }
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/deletedstorage/{storage-account-name}"
    ],
    "lhs": {
      "get": {
        "tags": [
          "DeletedStorage"
        ],
        "operationId": "GetDeletedStorageAccount",
        "summary": "Gets the specified deleted storage account.",
        "description": "The Get Deleted Storage Account operation returns the specified deleted storage account along with its attributes. This operation requires the storage/get permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The deleted storage account and information on when it will be purged, and how to recover the deleted storage account.",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The storage account id.",
                      "readOnly": true
                    },
                    "resourceId": {
                      "type": "string",
                      "description": "The storage account resource id.",
                      "readOnly": true
                    },
                    "activeKeyName": {
                      "type": "string",
                      "description": "The current active storage account key name.",
                      "readOnly": true
                    },
                    "autoRegenerateKey": {
                      "type": "boolean",
                      "description": "whether keyvault should manage the storage account for the user.",
                      "readOnly": true
                    },
                    "regenerationPeriod": {
                      "type": "string",
                      "description": "The key regeneration time duration specified in ISO-8601 format.",
                      "readOnly": true
                    },
                    "attributes": {
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "the enabled state of the object."
                        },
                        "created": {
                          "type": "integer",
                          "format": "unixtime",
                          "readOnly": true,
                          "description": "Creation time in UTC."
                        },
                        "updated": {
                          "type": "integer",
                          "format": "unixtime",
                          "readOnly": true,
                          "description": "Last updated time in UTC."
                        },
                        "recoverableDays": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": true,
                          "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete enabled, otherwise 0."
                        },
                        "recoveryLevel": {
                          "type": "string",
                          "description": "Reflects the deletion recovery level currently in effect for storage accounts in the current vault. If it contains 'Purgeable' the storage account can be permanently deleted by a privileged user; otherwise, only the system can purge the storage account, at the end of the retention interval.",
                          "enum": [
                            "Purgeable",
                            "Recoverable+Purgeable",
                            "Recoverable",
                            "Recoverable+ProtectedSubscription",
                            "CustomizedRecoverable+Purgeable",
                            "CustomizedRecoverable",
                            "CustomizedRecoverable+ProtectedSubscription"
                          ],
                          "x-ms-enum": {
                            "name": "DeletionRecoveryLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Purgeable",
                                "description": "Denotes a vault state in which deletion is an irreversible operation, without the possibility for recovery. This level corresponds to no protection being available against a Delete operation; the data is irretrievably lost upon accepting a Delete operation at the entity level or higher (vault, resource group, subscription etc.)"
                              },
                              {
                                "value": "Recoverable+Purgeable",
                                "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval (90 days), unless a Purge operation is requested, or the subscription is cancelled. System wil permanently delete it after 90 days, if not recovered"
                              },
                              {
                                "value": "Recoverable",
                                "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval(90 days) and while the subscription is still available. System wil permanently delete it after 90 days, if not recovered"
                              },
                              {
                                "value": "Recoverable+ProtectedSubscription",
                                "description": "Denotes a vault and subscription state in which deletion is recoverable within retention interval (90 days), immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself  cannot be permanently canceled. System wil permanently delete it after 90 days, if not recovered"
                              },
                              {
                                "value": "CustomizedRecoverable+Purgeable",
                                "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90). This level guarantees the recoverability of the deleted entity during the retention interval, unless a Purge operation is requested, or the subscription is cancelled."
                              },
                              {
                                "value": "CustomizedRecoverable",
                                "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the deleted entity during the retention interval and while the subscription is still available."
                              },
                              {
                                "value": "CustomizedRecoverable+ProtectedSubscription",
                                "description": "Denotes a vault and subscription state in which deletion is recoverable, immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself cannot be permanently canceled when 7<= SoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the deleted entity during the retention interval, and also reflects the fact that the subscription itself cannot be cancelled."
                              }
                            ]
                          },
                          "readOnly": true,
                          "x-nullable": false
                        }
                      },
                      "description": "The storage account management attributes."
                    },
                    "tags": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Application specific metadata in the form of key-value pairs",
                      "readOnly": true
                    }
                  },
                  "description": "A Storage account bundle consists of key vault storage account details plus its attributes."
                }
              ],
              "properties": {
                "recoveryId": {
                  "type": "string",
                  "description": "The url of the recovery object, used to identify and recover the deleted storage account."
                },
                "scheduledPurgeDate": {
                  "type": "integer",
                  "format": "unixtime",
                  "readOnly": true,
                  "description": "The time when the storage account is scheduled to be purged, in UTC"
                },
                "deletedDate": {
                  "type": "integer",
                  "format": "unixtime",
                  "readOnly": true,
                  "description": "The time when the storage account was deleted, in UTC"
                }
              },
              "description": "A deleted storage account bundle consisting of its previous id, attributes and its tags, as well as information on when it will be purged."
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Get Deleted Storage": {
            "$ref": "./examples/getDeletedStorageAccount.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DeletedStorage"
        ],
        "operationId": "PurgeDeletedStorageAccount",
        "summary": "Permanently deletes the specified storage account.",
        "description": "The purge deleted storage account operation removes the secret permanently, without the possibility of recovery. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/purge permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No content signaling that the storage account was purged forever."
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Purge Deleted Storage Account": {
            "$ref": "./examples/purgeStorageAccount.json"
          }
        }
      }
    }
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/deletedstorage/{storage-account-name}/recover"
    ],
    "lhs": {
      "post": {
        "tags": [
          "DeletedStorage"
        ],
        "operationId": "RecoverDeletedStorageAccount",
        "summary": "Recovers the deleted storage account.",
        "description": "Recovers the deleted storage account in the specified vault. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/recover permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A storage bundle of the original storage account and its attributes.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The storage account id.",
                  "readOnly": true
                },
                "resourceId": {
                  "type": "string",
                  "description": "The storage account resource id.",
                  "readOnly": true
                },
                "activeKeyName": {
                  "type": "string",
                  "description": "The current active storage account key name.",
                  "readOnly": true
                },
                "autoRegenerateKey": {
                  "type": "boolean",
                  "description": "whether keyvault should manage the storage account for the user.",
                  "readOnly": true
                },
                "regenerationPeriod": {
                  "type": "string",
                  "description": "The key regeneration time duration specified in ISO-8601 format.",
                  "readOnly": true
                },
                "attributes": {
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "the enabled state of the object."
                    },
                    "created": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Creation time in UTC."
                    },
                    "updated": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Last updated time in UTC."
                    },
                    "recoverableDays": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true,
                      "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete enabled, otherwise 0."
                    },
                    "recoveryLevel": {
                      "type": "string",
                      "description": "Reflects the deletion recovery level currently in effect for storage accounts in the current vault. If it contains 'Purgeable' the storage account can be permanently deleted by a privileged user; otherwise, only the system can purge the storage account, at the end of the retention interval.",
                      "enum": [
                        "Purgeable",
                        "Recoverable+Purgeable",
                        "Recoverable",
                        "Recoverable+ProtectedSubscription",
                        "CustomizedRecoverable+Purgeable",
                        "CustomizedRecoverable",
                        "CustomizedRecoverable+ProtectedSubscription"
                      ],
                      "x-ms-enum": {
                        "name": "DeletionRecoveryLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Purgeable",
                            "description": "Denotes a vault state in which deletion is an irreversible operation, without the possibility for recovery. This level corresponds to no protection being available against a Delete operation; the data is irretrievably lost upon accepting a Delete operation at the entity level or higher (vault, resource group, subscription etc.)"
                          },
                          {
                            "value": "Recoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval (90 days), unless a Purge operation is requested, or the subscription is cancelled. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "value": "Recoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval(90 days) and while the subscription is still available. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "value": "Recoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable within retention interval (90 days), immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself  cannot be permanently canceled. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "value": "CustomizedRecoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90). This level guarantees the recoverability of the deleted entity during the retention interval, unless a Purge operation is requested, or the subscription is cancelled."
                          },
                          {
                            "value": "CustomizedRecoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the deleted entity during the retention interval and while the subscription is still available."
                          },
                          {
                            "value": "CustomizedRecoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable, immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself cannot be permanently canceled when 7<= SoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the deleted entity during the retention interval, and also reflects the fact that the subscription itself cannot be cancelled."
                          }
                        ]
                      },
                      "readOnly": true,
                      "x-nullable": false
                    }
                  },
                  "description": "The storage account management attributes."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Application specific metadata in the form of key-value pairs",
                  "readOnly": true
                }
              },
              "description": "A Storage account bundle consists of key vault storage account details plus its attributes."
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Recover Deleted Storage Account": {
            "$ref": "./examples/recoverStorageAccount.json"
          }
        }
      }
    }
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/storage/{storage-account-name}/backup"
    ],
    "lhs": {
      "post": {
        "tags": [
          "Storage"
        ],
        "operationId": "BackupStorageAccount",
        "summary": "Backs up the specified storage account.",
        "description": "Requests that a backup of the specified storage account be downloaded to the client. This operation requires the storage/backup permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the storage account."
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The backup blob containing the backed up storage account.",
            "schema": {
              "properties": {
                "value": {
                  "type": "string",
                  "format": "base64url",
                  "readOnly": true,
                  "description": "The backup blob containing the backed up storage account."
                }
              },
              "description": "The backup storage result, containing the backup blob."
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Backup Storage Account": {
            "$ref": "./examples/backupStorageAccount.json"
          }
        }
      }
    }
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/storage/restore"
    ],
    "lhs": {
      "post": {
        "tags": [
          "Storage"
        ],
        "operationId": "RestoreStorageAccount",
        "summary": "Restores a backed up storage account to a vault.",
        "description": "Restores a backed up storage account to a vault. This operation requires the storage/restore permission.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "properties": {
                "value": {
                  "type": "string",
                  "x-ms-client-name": "storageBundleBackup",
                  "format": "base64url",
                  "description": "The backup blob associated with a storage account."
                }
              },
              "description": "The secret restore parameters.",
              "required": [
                "value"
              ]
            },
            "description": "The parameters to restore the storage account."
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Restored storage account bundle in the vault.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The storage account id.",
                  "readOnly": true
                },
                "resourceId": {
                  "type": "string",
                  "description": "The storage account resource id.",
                  "readOnly": true
                },
                "activeKeyName": {
                  "type": "string",
                  "description": "The current active storage account key name.",
                  "readOnly": true
                },
                "autoRegenerateKey": {
                  "type": "boolean",
                  "description": "whether keyvault should manage the storage account for the user.",
                  "readOnly": true
                },
                "regenerationPeriod": {
                  "type": "string",
                  "description": "The key regeneration time duration specified in ISO-8601 format.",
                  "readOnly": true
                },
                "attributes": {
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "the enabled state of the object."
                    },
                    "created": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Creation time in UTC."
                    },
                    "updated": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Last updated time in UTC."
                    },
                    "recoverableDays": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true,
                      "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete enabled, otherwise 0."
                    },
                    "recoveryLevel": {
                      "type": "string",
                      "description": "Reflects the deletion recovery level currently in effect for storage accounts in the current vault. If it contains 'Purgeable' the storage account can be permanently deleted by a privileged user; otherwise, only the system can purge the storage account, at the end of the retention interval.",
                      "enum": [
                        "Purgeable",
                        "Recoverable+Purgeable",
                        "Recoverable",
                        "Recoverable+ProtectedSubscription",
                        "CustomizedRecoverable+Purgeable",
                        "CustomizedRecoverable",
                        "CustomizedRecoverable+ProtectedSubscription"
                      ],
                      "x-ms-enum": {
                        "name": "DeletionRecoveryLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Purgeable",
                            "description": "Denotes a vault state in which deletion is an irreversible operation, without the possibility for recovery. This level corresponds to no protection being available against a Delete operation; the data is irretrievably lost upon accepting a Delete operation at the entity level or higher (vault, resource group, subscription etc.)"
                          },
                          {
                            "value": "Recoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval (90 days), unless a Purge operation is requested, or the subscription is cancelled. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "value": "Recoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval(90 days) and while the subscription is still available. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "value": "Recoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable within retention interval (90 days), immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself  cannot be permanently canceled. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "value": "CustomizedRecoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90). This level guarantees the recoverability of the deleted entity during the retention interval, unless a Purge operation is requested, or the subscription is cancelled."
                          },
                          {
                            "value": "CustomizedRecoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the deleted entity during the retention interval and while the subscription is still available."
                          },
                          {
                            "value": "CustomizedRecoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable, immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself cannot be permanently canceled when 7<= SoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the deleted entity during the retention interval, and also reflects the fact that the subscription itself cannot be cancelled."
                          }
                        ]
                      },
                      "readOnly": true,
                      "x-nullable": false
                    }
                  },
                  "description": "The storage account management attributes."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Application specific metadata in the form of key-value pairs",
                  "readOnly": true
                }
              },
              "description": "A Storage account bundle consists of key vault storage account details plus its attributes."
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Restore Storage Account": {
            "$ref": "./examples/restoreStorageAccount.json"
          }
        }
      }
    }
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/storage/{storage-account-name}"
    ],
    "lhs": {
      "delete": {
        "tags": [
          "Storage"
        ],
        "operationId": "DeleteStorageAccount",
        "description": "Deletes a storage account. This operation requires the storage/delete permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The deleted storage account and information on when the storage account will be deleted, and how to recover the deleted storage account.",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The storage account id.",
                      "readOnly": true
                    },
                    "resourceId": {
                      "type": "string",
                      "description": "The storage account resource id.",
                      "readOnly": true
                    },
                    "activeKeyName": {
                      "type": "string",
                      "description": "The current active storage account key name.",
                      "readOnly": true
                    },
                    "autoRegenerateKey": {
                      "type": "boolean",
                      "description": "whether keyvault should manage the storage account for the user.",
                      "readOnly": true
                    },
                    "regenerationPeriod": {
                      "type": "string",
                      "description": "The key regeneration time duration specified in ISO-8601 format.",
                      "readOnly": true
                    },
                    "attributes": {
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "the enabled state of the object."
                        },
                        "created": {
                          "type": "integer",
                          "format": "unixtime",
                          "readOnly": true,
                          "description": "Creation time in UTC."
                        },
                        "updated": {
                          "type": "integer",
                          "format": "unixtime",
                          "readOnly": true,
                          "description": "Last updated time in UTC."
                        },
                        "recoverableDays": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": true,
                          "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete enabled, otherwise 0."
                        },
                        "recoveryLevel": {
                          "type": "string",
                          "description": "Reflects the deletion recovery level currently in effect for storage accounts in the current vault. If it contains 'Purgeable' the storage account can be permanently deleted by a privileged user; otherwise, only the system can purge the storage account, at the end of the retention interval.",
                          "enum": [
                            "Purgeable",
                            "Recoverable+Purgeable",
                            "Recoverable",
                            "Recoverable+ProtectedSubscription",
                            "CustomizedRecoverable+Purgeable",
                            "CustomizedRecoverable",
                            "CustomizedRecoverable+ProtectedSubscription"
                          ],
                          "x-ms-enum": {
                            "name": "DeletionRecoveryLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Purgeable",
                                "description": "Denotes a vault state in which deletion is an irreversible operation, without the possibility for recovery. This level corresponds to no protection being available against a Delete operation; the data is irretrievably lost upon accepting a Delete operation at the entity level or higher (vault, resource group, subscription etc.)"
                              },
                              {
                                "value": "Recoverable+Purgeable",
                                "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval (90 days), unless a Purge operation is requested, or the subscription is cancelled. System wil permanently delete it after 90 days, if not recovered"
                              },
                              {
                                "value": "Recoverable",
                                "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval(90 days) and while the subscription is still available. System wil permanently delete it after 90 days, if not recovered"
                              },
                              {
                                "value": "Recoverable+ProtectedSubscription",
                                "description": "Denotes a vault and subscription state in which deletion is recoverable within retention interval (90 days), immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself  cannot be permanently canceled. System wil permanently delete it after 90 days, if not recovered"
                              },
                              {
                                "value": "CustomizedRecoverable+Purgeable",
                                "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90). This level guarantees the recoverability of the deleted entity during the retention interval, unless a Purge operation is requested, or the subscription is cancelled."
                              },
                              {
                                "value": "CustomizedRecoverable",
                                "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the deleted entity during the retention interval and while the subscription is still available."
                              },
                              {
                                "value": "CustomizedRecoverable+ProtectedSubscription",
                                "description": "Denotes a vault and subscription state in which deletion is recoverable, immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself cannot be permanently canceled when 7<= SoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the deleted entity during the retention interval, and also reflects the fact that the subscription itself cannot be cancelled."
                              }
                            ]
                          },
                          "readOnly": true,
                          "x-nullable": false
                        }
                      },
                      "description": "The storage account management attributes."
                    },
                    "tags": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Application specific metadata in the form of key-value pairs",
                      "readOnly": true
                    }
                  },
                  "description": "A Storage account bundle consists of key vault storage account details plus its attributes."
                }
              ],
              "properties": {
                "recoveryId": {
                  "type": "string",
                  "description": "The url of the recovery object, used to identify and recover the deleted storage account."
                },
                "scheduledPurgeDate": {
                  "type": "integer",
                  "format": "unixtime",
                  "readOnly": true,
                  "description": "The time when the storage account is scheduled to be purged, in UTC"
                },
                "deletedDate": {
                  "type": "integer",
                  "format": "unixtime",
                  "readOnly": true,
                  "description": "The time when the storage account was deleted, in UTC"
                }
              },
              "description": "A deleted storage account bundle consisting of its previous id, attributes and its tags, as well as information on when it will be purged."
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Storage account": {
            "$ref": "./examples/deleteStorageAccount.json"
          }
        }
      },
      "get": {
        "tags": [
          "Storage"
        ],
        "operationId": "GetStorageAccount",
        "description": "Gets information about a specified storage account. This operation requires the storage/get permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved storage account.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The storage account id.",
                  "readOnly": true
                },
                "resourceId": {
                  "type": "string",
                  "description": "The storage account resource id.",
                  "readOnly": true
                },
                "activeKeyName": {
                  "type": "string",
                  "description": "The current active storage account key name.",
                  "readOnly": true
                },
                "autoRegenerateKey": {
                  "type": "boolean",
                  "description": "whether keyvault should manage the storage account for the user.",
                  "readOnly": true
                },
                "regenerationPeriod": {
                  "type": "string",
                  "description": "The key regeneration time duration specified in ISO-8601 format.",
                  "readOnly": true
                },
                "attributes": {
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "the enabled state of the object."
                    },
                    "created": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Creation time in UTC."
                    },
                    "updated": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Last updated time in UTC."
                    },
                    "recoverableDays": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true,
                      "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete enabled, otherwise 0."
                    },
                    "recoveryLevel": {
                      "type": "string",
                      "description": "Reflects the deletion recovery level currently in effect for storage accounts in the current vault. If it contains 'Purgeable' the storage account can be permanently deleted by a privileged user; otherwise, only the system can purge the storage account, at the end of the retention interval.",
                      "enum": [
                        "Purgeable",
                        "Recoverable+Purgeable",
                        "Recoverable",
                        "Recoverable+ProtectedSubscription",
                        "CustomizedRecoverable+Purgeable",
                        "CustomizedRecoverable",
                        "CustomizedRecoverable+ProtectedSubscription"
                      ],
                      "x-ms-enum": {
                        "name": "DeletionRecoveryLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Purgeable",
                            "description": "Denotes a vault state in which deletion is an irreversible operation, without the possibility for recovery. This level corresponds to no protection being available against a Delete operation; the data is irretrievably lost upon accepting a Delete operation at the entity level or higher (vault, resource group, subscription etc.)"
                          },
                          {
                            "value": "Recoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval (90 days), unless a Purge operation is requested, or the subscription is cancelled. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "value": "Recoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval(90 days) and while the subscription is still available. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "value": "Recoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable within retention interval (90 days), immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself  cannot be permanently canceled. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "value": "CustomizedRecoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90). This level guarantees the recoverability of the deleted entity during the retention interval, unless a Purge operation is requested, or the subscription is cancelled."
                          },
                          {
                            "value": "CustomizedRecoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the deleted entity during the retention interval and while the subscription is still available."
                          },
                          {
                            "value": "CustomizedRecoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable, immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself cannot be permanently canceled when 7<= SoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the deleted entity during the retention interval, and also reflects the fact that the subscription itself cannot be cancelled."
                          }
                        ]
                      },
                      "readOnly": true,
                      "x-nullable": false
                    }
                  },
                  "description": "The storage account management attributes."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Application specific metadata in the form of key-value pairs",
                  "readOnly": true
                }
              },
              "description": "A Storage account bundle consists of key vault storage account details plus its attributes."
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Get Storage account": {
            "$ref": "./examples/getStorageAccount.json"
          }
        }
      },
      "put": {
        "tags": [
          "Storage"
        ],
        "operationId": "SetStorageAccount",
        "description": "Creates or updates a new storage account. This operation requires the storage/set permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account. The value you provide may be copied globally for the purpose of running the service. The value provided should not include personally identifiable or sensitive information."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "properties": {
                "resourceId": {
                  "type": "string",
                  "description": "Storage account resource id."
                },
                "activeKeyName": {
                  "type": "string",
                  "description": "Current active storage account key name."
                },
                "autoRegenerateKey": {
                  "type": "boolean",
                  "description": "whether keyvault should manage the storage account for the user."
                },
                "regenerationPeriod": {
                  "type": "string",
                  "description": "The key regeneration time duration specified in ISO-8601 format."
                },
                "attributes": {
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "the enabled state of the object."
                    },
                    "created": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Creation time in UTC."
                    },
                    "updated": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Last updated time in UTC."
                    },
                    "recoverableDays": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true,
                      "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete enabled, otherwise 0."
                    },
                    "recoveryLevel": {
                      "type": "string",
                      "description": "Reflects the deletion recovery level currently in effect for storage accounts in the current vault. If it contains 'Purgeable' the storage account can be permanently deleted by a privileged user; otherwise, only the system can purge the storage account, at the end of the retention interval.",
                      "enum": [
                        "Purgeable",
                        "Recoverable+Purgeable",
                        "Recoverable",
                        "Recoverable+ProtectedSubscription",
                        "CustomizedRecoverable+Purgeable",
                        "CustomizedRecoverable",
                        "CustomizedRecoverable+ProtectedSubscription"
                      ],
                      "x-ms-enum": {
                        "name": "DeletionRecoveryLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Purgeable",
                            "description": "Denotes a vault state in which deletion is an irreversible operation, without the possibility for recovery. This level corresponds to no protection being available against a Delete operation; the data is irretrievably lost upon accepting a Delete operation at the entity level or higher (vault, resource group, subscription etc.)"
                          },
                          {
                            "value": "Recoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval (90 days), unless a Purge operation is requested, or the subscription is cancelled. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "value": "Recoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval(90 days) and while the subscription is still available. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "value": "Recoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable within retention interval (90 days), immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself  cannot be permanently canceled. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "value": "CustomizedRecoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90). This level guarantees the recoverability of the deleted entity during the retention interval, unless a Purge operation is requested, or the subscription is cancelled."
                          },
                          {
                            "value": "CustomizedRecoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the deleted entity during the retention interval and while the subscription is still available."
                          },
                          {
                            "value": "CustomizedRecoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable, immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself cannot be permanently canceled when 7<= SoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the deleted entity during the retention interval, and also reflects the fact that the subscription itself cannot be cancelled."
                          }
                        ]
                      },
                      "readOnly": true,
                      "x-nullable": false
                    }
                  },
                  "description": "The storage account management attributes."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Application specific metadata in the form of key-value pairs."
                }
              },
              "description": "The storage account create parameters.",
              "required": [
                "resourceId",
                "activeKeyName",
                "autoRegenerateKey"
              ]
            },
            "description": "The parameters to create a storage account."
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The created storage account.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The storage account id.",
                  "readOnly": true
                },
                "resourceId": {
                  "type": "string",
                  "description": "The storage account resource id.",
                  "readOnly": true
                },
                "activeKeyName": {
                  "type": "string",
                  "description": "The current active storage account key name.",
                  "readOnly": true
                },
                "autoRegenerateKey": {
                  "type": "boolean",
                  "description": "whether keyvault should manage the storage account for the user.",
                  "readOnly": true
                },
                "regenerationPeriod": {
                  "type": "string",
                  "description": "The key regeneration time duration specified in ISO-8601 format.",
                  "readOnly": true
                },
                "attributes": {
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "the enabled state of the object."
                    },
                    "created": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Creation time in UTC."
                    },
                    "updated": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Last updated time in UTC."
                    },
                    "recoverableDays": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true,
                      "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete enabled, otherwise 0."
                    },
                    "recoveryLevel": {
                      "type": "string",
                      "description": "Reflects the deletion recovery level currently in effect for storage accounts in the current vault. If it contains 'Purgeable' the storage account can be permanently deleted by a privileged user; otherwise, only the system can purge the storage account, at the end of the retention interval.",
                      "enum": [
                        "Purgeable",
                        "Recoverable+Purgeable",
                        "Recoverable",
                        "Recoverable+ProtectedSubscription",
                        "CustomizedRecoverable+Purgeable",
                        "CustomizedRecoverable",
                        "CustomizedRecoverable+ProtectedSubscription"
                      ],
                      "x-ms-enum": {
                        "name": "DeletionRecoveryLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Purgeable",
                            "description": "Denotes a vault state in which deletion is an irreversible operation, without the possibility for recovery. This level corresponds to no protection being available against a Delete operation; the data is irretrievably lost upon accepting a Delete operation at the entity level or higher (vault, resource group, subscription etc.)"
                          },
                          {
                            "value": "Recoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval (90 days), unless a Purge operation is requested, or the subscription is cancelled. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "value": "Recoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval(90 days) and while the subscription is still available. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "value": "Recoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable within retention interval (90 days), immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself  cannot be permanently canceled. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "value": "CustomizedRecoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90). This level guarantees the recoverability of the deleted entity during the retention interval, unless a Purge operation is requested, or the subscription is cancelled."
                          },
                          {
                            "value": "CustomizedRecoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the deleted entity during the retention interval and while the subscription is still available."
                          },
                          {
                            "value": "CustomizedRecoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable, immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself cannot be permanently canceled when 7<= SoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the deleted entity during the retention interval, and also reflects the fact that the subscription itself cannot be cancelled."
                          }
                        ]
                      },
                      "readOnly": true,
                      "x-nullable": false
                    }
                  },
                  "description": "The storage account management attributes."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Application specific metadata in the form of key-value pairs",
                  "readOnly": true
                }
              },
              "description": "A Storage account bundle consists of key vault storage account details plus its attributes."
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Set Storage account": {
            "$ref": "./examples/setStorageAccount.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Storage"
        ],
        "operationId": "UpdateStorageAccount",
        "description": "Updates the specified attributes associated with the given storage account. This operation requires the storage/set/update permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "properties": {
                "activeKeyName": {
                  "type": "string",
                  "description": "The current active storage account key name."
                },
                "autoRegenerateKey": {
                  "type": "boolean",
                  "description": "whether keyvault should manage the storage account for the user."
                },
                "regenerationPeriod": {
                  "type": "string",
                  "description": "The key regeneration time duration specified in ISO-8601 format."
                },
                "attributes": {
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "the enabled state of the object."
                    },
                    "created": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Creation time in UTC."
                    },
                    "updated": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Last updated time in UTC."
                    },
                    "recoverableDays": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true,
                      "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete enabled, otherwise 0."
                    },
                    "recoveryLevel": {
                      "type": "string",
                      "description": "Reflects the deletion recovery level currently in effect for storage accounts in the current vault. If it contains 'Purgeable' the storage account can be permanently deleted by a privileged user; otherwise, only the system can purge the storage account, at the end of the retention interval.",
                      "enum": [
                        "Purgeable",
                        "Recoverable+Purgeable",
                        "Recoverable",
                        "Recoverable+ProtectedSubscription",
                        "CustomizedRecoverable+Purgeable",
                        "CustomizedRecoverable",
                        "CustomizedRecoverable+ProtectedSubscription"
                      ],
                      "x-ms-enum": {
                        "name": "DeletionRecoveryLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Purgeable",
                            "description": "Denotes a vault state in which deletion is an irreversible operation, without the possibility for recovery. This level corresponds to no protection being available against a Delete operation; the data is irretrievably lost upon accepting a Delete operation at the entity level or higher (vault, resource group, subscription etc.)"
                          },
                          {
                            "value": "Recoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval (90 days), unless a Purge operation is requested, or the subscription is cancelled. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "value": "Recoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval(90 days) and while the subscription is still available. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "value": "Recoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable within retention interval (90 days), immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself  cannot be permanently canceled. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "value": "CustomizedRecoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90). This level guarantees the recoverability of the deleted entity during the retention interval, unless a Purge operation is requested, or the subscription is cancelled."
                          },
                          {
                            "value": "CustomizedRecoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the deleted entity during the retention interval and while the subscription is still available."
                          },
                          {
                            "value": "CustomizedRecoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable, immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself cannot be permanently canceled when 7<= SoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the deleted entity during the retention interval, and also reflects the fact that the subscription itself cannot be cancelled."
                          }
                        ]
                      },
                      "readOnly": true,
                      "x-nullable": false
                    }
                  },
                  "description": "The storage account management attributes."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Application specific metadata in the form of key-value pairs."
                }
              },
              "description": "The storage account update parameters."
            },
            "description": "The parameters to update a storage account."
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The updated storage account.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The storage account id.",
                  "readOnly": true
                },
                "resourceId": {
                  "type": "string",
                  "description": "The storage account resource id.",
                  "readOnly": true
                },
                "activeKeyName": {
                  "type": "string",
                  "description": "The current active storage account key name.",
                  "readOnly": true
                },
                "autoRegenerateKey": {
                  "type": "boolean",
                  "description": "whether keyvault should manage the storage account for the user.",
                  "readOnly": true
                },
                "regenerationPeriod": {
                  "type": "string",
                  "description": "The key regeneration time duration specified in ISO-8601 format.",
                  "readOnly": true
                },
                "attributes": {
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "the enabled state of the object."
                    },
                    "created": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Creation time in UTC."
                    },
                    "updated": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Last updated time in UTC."
                    },
                    "recoverableDays": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true,
                      "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete enabled, otherwise 0."
                    },
                    "recoveryLevel": {
                      "type": "string",
                      "description": "Reflects the deletion recovery level currently in effect for storage accounts in the current vault. If it contains 'Purgeable' the storage account can be permanently deleted by a privileged user; otherwise, only the system can purge the storage account, at the end of the retention interval.",
                      "enum": [
                        "Purgeable",
                        "Recoverable+Purgeable",
                        "Recoverable",
                        "Recoverable+ProtectedSubscription",
                        "CustomizedRecoverable+Purgeable",
                        "CustomizedRecoverable",
                        "CustomizedRecoverable+ProtectedSubscription"
                      ],
                      "x-ms-enum": {
                        "name": "DeletionRecoveryLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Purgeable",
                            "description": "Denotes a vault state in which deletion is an irreversible operation, without the possibility for recovery. This level corresponds to no protection being available against a Delete operation; the data is irretrievably lost upon accepting a Delete operation at the entity level or higher (vault, resource group, subscription etc.)"
                          },
                          {
                            "value": "Recoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval (90 days), unless a Purge operation is requested, or the subscription is cancelled. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "value": "Recoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval(90 days) and while the subscription is still available. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "value": "Recoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable within retention interval (90 days), immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself  cannot be permanently canceled. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "value": "CustomizedRecoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90). This level guarantees the recoverability of the deleted entity during the retention interval, unless a Purge operation is requested, or the subscription is cancelled."
                          },
                          {
                            "value": "CustomizedRecoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the deleted entity during the retention interval and while the subscription is still available."
                          },
                          {
                            "value": "CustomizedRecoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable, immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself cannot be permanently canceled when 7<= SoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the deleted entity during the retention interval, and also reflects the fact that the subscription itself cannot be cancelled."
                          }
                        ]
                      },
                      "readOnly": true,
                      "x-nullable": false
                    }
                  },
                  "description": "The storage account management attributes."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Application specific metadata in the form of key-value pairs",
                  "readOnly": true
                }
              },
              "description": "A Storage account bundle consists of key vault storage account details plus its attributes."
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Update Storage account": {
            "$ref": "./examples/updateStorageAccount.json"
          }
        }
      }
    }
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/storage/{storage-account-name}/regeneratekey"
    ],
    "lhs": {
      "post": {
        "tags": [
          "Storage"
        ],
        "operationId": "RegenerateStorageAccountKey",
        "description": "Regenerates the specified key value for the given storage account. This operation requires the storage/regeneratekey permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "properties": {
                "keyName": {
                  "type": "string",
                  "description": "The storage account key name."
                }
              },
              "description": "The storage account key regenerate parameters.",
              "required": [
                "keyName"
              ]
            },
            "description": "The parameters to regenerate storage account key."
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The updated storage account.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The storage account id.",
                  "readOnly": true
                },
                "resourceId": {
                  "type": "string",
                  "description": "The storage account resource id.",
                  "readOnly": true
                },
                "activeKeyName": {
                  "type": "string",
                  "description": "The current active storage account key name.",
                  "readOnly": true
                },
                "autoRegenerateKey": {
                  "type": "boolean",
                  "description": "whether keyvault should manage the storage account for the user.",
                  "readOnly": true
                },
                "regenerationPeriod": {
                  "type": "string",
                  "description": "The key regeneration time duration specified in ISO-8601 format.",
                  "readOnly": true
                },
                "attributes": {
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "the enabled state of the object."
                    },
                    "created": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Creation time in UTC."
                    },
                    "updated": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Last updated time in UTC."
                    },
                    "recoverableDays": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true,
                      "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete enabled, otherwise 0."
                    },
                    "recoveryLevel": {
                      "type": "string",
                      "description": "Reflects the deletion recovery level currently in effect for storage accounts in the current vault. If it contains 'Purgeable' the storage account can be permanently deleted by a privileged user; otherwise, only the system can purge the storage account, at the end of the retention interval.",
                      "enum": [
                        "Purgeable",
                        "Recoverable+Purgeable",
                        "Recoverable",
                        "Recoverable+ProtectedSubscription",
                        "CustomizedRecoverable+Purgeable",
                        "CustomizedRecoverable",
                        "CustomizedRecoverable+ProtectedSubscription"
                      ],
                      "x-ms-enum": {
                        "name": "DeletionRecoveryLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Purgeable",
                            "description": "Denotes a vault state in which deletion is an irreversible operation, without the possibility for recovery. This level corresponds to no protection being available against a Delete operation; the data is irretrievably lost upon accepting a Delete operation at the entity level or higher (vault, resource group, subscription etc.)"
                          },
                          {
                            "value": "Recoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval (90 days), unless a Purge operation is requested, or the subscription is cancelled. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "value": "Recoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval(90 days) and while the subscription is still available. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "value": "Recoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable within retention interval (90 days), immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself  cannot be permanently canceled. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "value": "CustomizedRecoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90). This level guarantees the recoverability of the deleted entity during the retention interval, unless a Purge operation is requested, or the subscription is cancelled."
                          },
                          {
                            "value": "CustomizedRecoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the deleted entity during the retention interval and while the subscription is still available."
                          },
                          {
                            "value": "CustomizedRecoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable, immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself cannot be permanently canceled when 7<= SoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the deleted entity during the retention interval, and also reflects the fact that the subscription itself cannot be cancelled."
                          }
                        ]
                      },
                      "readOnly": true,
                      "x-nullable": false
                    }
                  },
                  "description": "The storage account management attributes."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Application specific metadata in the form of key-value pairs",
                  "readOnly": true
                }
              },
              "description": "A Storage account bundle consists of key vault storage account details plus its attributes."
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Regenerate Storage account key": {
            "$ref": "./examples/regenerateStorageAccountKey.json"
          }
        }
      }
    }
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/storage/{storage-account-name}/sas"
    ],
    "lhs": {
      "get": {
        "tags": [
          "Storage"
        ],
        "operationId": "GetSasDefinitions",
        "description": "List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "name": "maxresults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 25,
            "description": "Maximum number of results to return in a page. If not specified the service will return up to 25 results."
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A response message containing a list of SAS definitions along with a link to the next page of SAS definitions.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The storage SAS identifier.",
                        "readOnly": true
                      },
                      "sid": {
                        "x-ms-client-name": "SecretId",
                        "type": "string",
                        "description": "The storage account SAS definition secret id.",
                        "readOnly": true
                      },
                      "attributes": {
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "description": "the enabled state of the object."
                          },
                          "created": {
                            "type": "integer",
                            "format": "unixtime",
                            "readOnly": true,
                            "description": "Creation time in UTC."
                          },
                          "updated": {
                            "type": "integer",
                            "format": "unixtime",
                            "readOnly": true,
                            "description": "Last updated time in UTC."
                          },
                          "recoverableDays": {
                            "type": "integer",
                            "format": "int32",
                            "readOnly": true,
                            "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete enabled, otherwise 0."
                          },
                          "recoveryLevel": {
                            "type": "string",
                            "description": "Reflects the deletion recovery level currently in effect for SAS definitions in the current vault. If it contains 'Purgeable' the SAS definition can be permanently deleted by a privileged user; otherwise, only the system can purge the SAS definition, at the end of the retention interval.",
                            "enum": [
                              "Purgeable",
                              "Recoverable+Purgeable",
                              "Recoverable",
                              "Recoverable+ProtectedSubscription",
                              "CustomizedRecoverable+Purgeable",
                              "CustomizedRecoverable",
                              "CustomizedRecoverable+ProtectedSubscription"
                            ],
                            "x-ms-enum": {
                              "name": "DeletionRecoveryLevel",
                              "modelAsString": true
                            },
                            "readOnly": true,
                            "x-nullable": false
                          }
                        },
                        "description": "The SAS definition management attributes."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Application specific metadata in the form of key-value pairs.",
                        "readOnly": true
                      }
                    },
                    "description": "The SAS definition item containing storage SAS definition metadata."
                  },
                  "readOnly": true,
                  "description": "A response message containing a list of SAS definitions along with a link to the next page of SAS definitions."
                },
                "nextLink": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The URL to get the next set of SAS definitions."
                }
              },
              "description": "The storage account SAS definition list result."
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Storage Sas Definition": {
            "$ref": "./examples/listStorageSasDefinition.json"
          }
        }
      }
    }
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/deletedstorage/{storage-account-name}/sas"
    ],
    "lhs": {
      "get": {
        "tags": [
          "DeletedStorage"
        ],
        "operationId": "GetDeletedSasDefinitions",
        "summary": "Lists deleted SAS definitions for the specified vault and storage account.",
        "description": "The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "name": "maxresults",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 25,
            "description": "Maximum number of results to return in a page. If not specified the service will return up to 25 results."
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A response message containing a list of deleted SAS definitions for the storage account, along with a link to the next page of deleted SAS definitions.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The storage SAS identifier.",
                            "readOnly": true
                          },
                          "sid": {
                            "x-ms-client-name": "SecretId",
                            "type": "string",
                            "description": "The storage account SAS definition secret id.",
                            "readOnly": true
                          },
                          "attributes": {
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "description": "the enabled state of the object."
                              },
                              "created": {
                                "type": "integer",
                                "format": "unixtime",
                                "readOnly": true,
                                "description": "Creation time in UTC."
                              },
                              "updated": {
                                "type": "integer",
                                "format": "unixtime",
                                "readOnly": true,
                                "description": "Last updated time in UTC."
                              },
                              "recoverableDays": {
                                "type": "integer",
                                "format": "int32",
                                "readOnly": true,
                                "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete enabled, otherwise 0."
                              },
                              "recoveryLevel": {
                                "type": "string",
                                "description": "Reflects the deletion recovery level currently in effect for SAS definitions in the current vault. If it contains 'Purgeable' the SAS definition can be permanently deleted by a privileged user; otherwise, only the system can purge the SAS definition, at the end of the retention interval.",
                                "enum": [
                                  "Purgeable",
                                  "Recoverable+Purgeable",
                                  "Recoverable",
                                  "Recoverable+ProtectedSubscription",
                                  "CustomizedRecoverable+Purgeable",
                                  "CustomizedRecoverable",
                                  "CustomizedRecoverable+ProtectedSubscription"
                                ],
                                "x-ms-enum": {
                                  "name": "DeletionRecoveryLevel",
                                  "modelAsString": true
                                },
                                "readOnly": true,
                                "x-nullable": false
                              }
                            },
                            "description": "The SAS definition management attributes."
                          },
                          "tags": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Application specific metadata in the form of key-value pairs.",
                            "readOnly": true
                          }
                        },
                        "description": "The SAS definition item containing storage SAS definition metadata."
                      }
                    ],
                    "properties": {
                      "recoveryId": {
                        "type": "string",
                        "description": "The url of the recovery object, used to identify and recover the deleted SAS definition."
                      },
                      "scheduledPurgeDate": {
                        "type": "integer",
                        "format": "unixtime",
                        "readOnly": true,
                        "description": "The time when the SAS definition is scheduled to be purged, in UTC"
                      },
                      "deletedDate": {
                        "type": "integer",
                        "format": "unixtime",
                        "readOnly": true,
                        "description": "The time when the SAS definition was deleted, in UTC"
                      }
                    },
                    "description": "The deleted SAS definition item containing metadata about the deleted SAS definition."
                  },
                  "readOnly": true,
                  "description": "A response message containing a list of the deleted SAS definitions in the vault along with a link to the next page of deleted sas definitions"
                },
                "nextLink": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The URL to get the next set of deleted SAS definitions."
                }
              },
              "description": "The deleted SAS definition list result"
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Deleted Storage Sas Definitions": {
            "$ref": "./examples/listDeletedStorageSasDefinition.json"
          }
        }
      }
    }
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/deletedstorage/{storage-account-name}/sas/{sas-definition-name}"
    ],
    "lhs": {
      "get": {
        "tags": [
          "DeletedStorage"
        ],
        "operationId": "GetDeletedSasDefinition",
        "summary": "Gets the specified deleted sas definition.",
        "description": "The Get Deleted SAS Definition operation returns the specified deleted SAS definition along with its attributes. This operation requires the storage/getsas permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "name": "sas-definition-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the SAS definition."
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The deleted SAS definition and information on when the it will be purged, and how to recover the deleted SAS definition.",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The SAS definition id.",
                      "readOnly": true
                    },
                    "sid": {
                      "x-ms-client-name": "SecretId",
                      "type": "string",
                      "description": "Storage account SAS definition secret id.",
                      "readOnly": true
                    },
                    "templateUri": {
                      "type": "string",
                      "description": "The SAS definition token template signed with an arbitrary key.  Tokens created according to the SAS definition will have the same properties as the template.",
                      "readOnly": true
                    },
                    "sasType": {
                      "type": "string",
                      "description": "The type of SAS token the SAS definition will create.",
                      "enum": [
                        "account",
                        "service"
                      ],
                      "x-ms-enum": {
                        "name": "SasTokenType",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "validityPeriod": {
                      "type": "string",
                      "description": "The validity period of SAS tokens created according to the SAS definition.",
                      "readOnly": true
                    },
                    "attributes": {
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "the enabled state of the object."
                        },
                        "created": {
                          "type": "integer",
                          "format": "unixtime",
                          "readOnly": true,
                          "description": "Creation time in UTC."
                        },
                        "updated": {
                          "type": "integer",
                          "format": "unixtime",
                          "readOnly": true,
                          "description": "Last updated time in UTC."
                        },
                        "recoverableDays": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": true,
                          "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete enabled, otherwise 0."
                        },
                        "recoveryLevel": {
                          "type": "string",
                          "description": "Reflects the deletion recovery level currently in effect for SAS definitions in the current vault. If it contains 'Purgeable' the SAS definition can be permanently deleted by a privileged user; otherwise, only the system can purge the SAS definition, at the end of the retention interval.",
                          "enum": [
                            "Purgeable",
                            "Recoverable+Purgeable",
                            "Recoverable",
                            "Recoverable+ProtectedSubscription",
                            "CustomizedRecoverable+Purgeable",
                            "CustomizedRecoverable",
                            "CustomizedRecoverable+ProtectedSubscription"
                          ],
                          "x-ms-enum": {
                            "name": "DeletionRecoveryLevel",
                            "modelAsString": true
                          },
                          "readOnly": true,
                          "x-nullable": false
                        }
                      },
                      "description": "The SAS definition management attributes."
                    },
                    "tags": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Application specific metadata in the form of key-value pairs",
                      "readOnly": true
                    }
                  },
                  "description": "A SAS definition bundle consists of key vault SAS definition details plus its attributes."
                }
              ],
              "properties": {
                "recoveryId": {
                  "type": "string",
                  "description": "The url of the recovery object, used to identify and recover the deleted SAS definition."
                },
                "scheduledPurgeDate": {
                  "type": "integer",
                  "format": "unixtime",
                  "readOnly": true,
                  "description": "The time when the SAS definition is scheduled to be purged, in UTC"
                },
                "deletedDate": {
                  "type": "integer",
                  "format": "unixtime",
                  "readOnly": true,
                  "description": "The time when the SAS definition was deleted, in UTC"
                }
              },
              "description": "A deleted SAS definition bundle consisting of its previous id, attributes and its tags, as well as information on when it will be purged."
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Get Deleted Storage Sas Definition": {
            "$ref": "./examples/getDeletedStorageSasDefinition.json"
          }
        }
      }
    }
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/deletedstorage/{storage-account-name}/sas/{sas-definition-name}/recover"
    ],
    "lhs": {
      "post": {
        "tags": [
          "DeletedStorage"
        ],
        "operationId": "RecoverDeletedSasDefinition",
        "summary": "Recovers the deleted SAS definition.",
        "description": "Recovers the deleted SAS definition for the specified storage account. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/recover permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "name": "sas-definition-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the SAS definition."
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A SAS definition bundle of the original SAS definition and its attributes.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The SAS definition id.",
                  "readOnly": true
                },
                "sid": {
                  "x-ms-client-name": "SecretId",
                  "type": "string",
                  "description": "Storage account SAS definition secret id.",
                  "readOnly": true
                },
                "templateUri": {
                  "type": "string",
                  "description": "The SAS definition token template signed with an arbitrary key.  Tokens created according to the SAS definition will have the same properties as the template.",
                  "readOnly": true
                },
                "sasType": {
                  "type": "string",
                  "description": "The type of SAS token the SAS definition will create.",
                  "enum": [
                    "account",
                    "service"
                  ],
                  "x-ms-enum": {
                    "name": "SasTokenType",
                    "modelAsString": true
                  },
                  "readOnly": true
                },
                "validityPeriod": {
                  "type": "string",
                  "description": "The validity period of SAS tokens created according to the SAS definition.",
                  "readOnly": true
                },
                "attributes": {
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "the enabled state of the object."
                    },
                    "created": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Creation time in UTC."
                    },
                    "updated": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Last updated time in UTC."
                    },
                    "recoverableDays": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true,
                      "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete enabled, otherwise 0."
                    },
                    "recoveryLevel": {
                      "type": "string",
                      "description": "Reflects the deletion recovery level currently in effect for SAS definitions in the current vault. If it contains 'Purgeable' the SAS definition can be permanently deleted by a privileged user; otherwise, only the system can purge the SAS definition, at the end of the retention interval.",
                      "enum": [
                        "Purgeable",
                        "Recoverable+Purgeable",
                        "Recoverable",
                        "Recoverable+ProtectedSubscription",
                        "CustomizedRecoverable+Purgeable",
                        "CustomizedRecoverable",
                        "CustomizedRecoverable+ProtectedSubscription"
                      ],
                      "x-ms-enum": {
                        "name": "DeletionRecoveryLevel",
                        "modelAsString": true
                      },
                      "readOnly": true,
                      "x-nullable": false
                    }
                  },
                  "description": "The SAS definition management attributes."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Application specific metadata in the form of key-value pairs",
                  "readOnly": true
                }
              },
              "description": "A SAS definition bundle consists of key vault SAS definition details plus its attributes."
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Recover Deleted Storage Sas Definition": {
            "$ref": "./examples/recoverStorageSasDefinition.json"
          }
        }
      }
    }
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/storage/{storage-account-name}/sas/{sas-definition-name}"
    ],
    "lhs": {
      "delete": {
        "tags": [
          "Storage"
        ],
        "operationId": "DeleteSasDefinition",
        "description": "Deletes a SAS definition from a specified storage account. This operation requires the storage/deletesas permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "name": "sas-definition-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the SAS definition."
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The deleted SAS definition and information on when the SAS definition will be deleted, and how to recover the deleted SAS definition.",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The SAS definition id.",
                      "readOnly": true
                    },
                    "sid": {
                      "x-ms-client-name": "SecretId",
                      "type": "string",
                      "description": "Storage account SAS definition secret id.",
                      "readOnly": true
                    },
                    "templateUri": {
                      "type": "string",
                      "description": "The SAS definition token template signed with an arbitrary key.  Tokens created according to the SAS definition will have the same properties as the template.",
                      "readOnly": true
                    },
                    "sasType": {
                      "type": "string",
                      "description": "The type of SAS token the SAS definition will create.",
                      "enum": [
                        "account",
                        "service"
                      ],
                      "x-ms-enum": {
                        "name": "SasTokenType",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "validityPeriod": {
                      "type": "string",
                      "description": "The validity period of SAS tokens created according to the SAS definition.",
                      "readOnly": true
                    },
                    "attributes": {
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "the enabled state of the object."
                        },
                        "created": {
                          "type": "integer",
                          "format": "unixtime",
                          "readOnly": true,
                          "description": "Creation time in UTC."
                        },
                        "updated": {
                          "type": "integer",
                          "format": "unixtime",
                          "readOnly": true,
                          "description": "Last updated time in UTC."
                        },
                        "recoverableDays": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": true,
                          "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete enabled, otherwise 0."
                        },
                        "recoveryLevel": {
                          "type": "string",
                          "description": "Reflects the deletion recovery level currently in effect for SAS definitions in the current vault. If it contains 'Purgeable' the SAS definition can be permanently deleted by a privileged user; otherwise, only the system can purge the SAS definition, at the end of the retention interval.",
                          "enum": [
                            "Purgeable",
                            "Recoverable+Purgeable",
                            "Recoverable",
                            "Recoverable+ProtectedSubscription",
                            "CustomizedRecoverable+Purgeable",
                            "CustomizedRecoverable",
                            "CustomizedRecoverable+ProtectedSubscription"
                          ],
                          "x-ms-enum": {
                            "name": "DeletionRecoveryLevel",
                            "modelAsString": true
                          },
                          "readOnly": true,
                          "x-nullable": false
                        }
                      },
                      "description": "The SAS definition management attributes."
                    },
                    "tags": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Application specific metadata in the form of key-value pairs",
                      "readOnly": true
                    }
                  },
                  "description": "A SAS definition bundle consists of key vault SAS definition details plus its attributes."
                }
              ],
              "properties": {
                "recoveryId": {
                  "type": "string",
                  "description": "The url of the recovery object, used to identify and recover the deleted SAS definition."
                },
                "scheduledPurgeDate": {
                  "type": "integer",
                  "format": "unixtime",
                  "readOnly": true,
                  "description": "The time when the SAS definition is scheduled to be purged, in UTC"
                },
                "deletedDate": {
                  "type": "integer",
                  "format": "unixtime",
                  "readOnly": true,
                  "description": "The time when the SAS definition was deleted, in UTC"
                }
              },
              "description": "A deleted SAS definition bundle consisting of its previous id, attributes and its tags, as well as information on when it will be purged."
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Storage Sas Definition": {
            "$ref": "./examples/deleteStorageSasDefinition.json"
          }
        }
      },
      "get": {
        "tags": [
          "Storage"
        ],
        "operationId": "GetSasDefinition",
        "description": "Gets information about a SAS definition for the specified storage account. This operation requires the storage/getsas permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "name": "sas-definition-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the SAS definition."
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved SAS definition.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The SAS definition id.",
                  "readOnly": true
                },
                "sid": {
                  "x-ms-client-name": "SecretId",
                  "type": "string",
                  "description": "Storage account SAS definition secret id.",
                  "readOnly": true
                },
                "templateUri": {
                  "type": "string",
                  "description": "The SAS definition token template signed with an arbitrary key.  Tokens created according to the SAS definition will have the same properties as the template.",
                  "readOnly": true
                },
                "sasType": {
                  "type": "string",
                  "description": "The type of SAS token the SAS definition will create.",
                  "enum": [
                    "account",
                    "service"
                  ],
                  "x-ms-enum": {
                    "name": "SasTokenType",
                    "modelAsString": true
                  },
                  "readOnly": true
                },
                "validityPeriod": {
                  "type": "string",
                  "description": "The validity period of SAS tokens created according to the SAS definition.",
                  "readOnly": true
                },
                "attributes": {
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "the enabled state of the object."
                    },
                    "created": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Creation time in UTC."
                    },
                    "updated": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Last updated time in UTC."
                    },
                    "recoverableDays": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true,
                      "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete enabled, otherwise 0."
                    },
                    "recoveryLevel": {
                      "type": "string",
                      "description": "Reflects the deletion recovery level currently in effect for SAS definitions in the current vault. If it contains 'Purgeable' the SAS definition can be permanently deleted by a privileged user; otherwise, only the system can purge the SAS definition, at the end of the retention interval.",
                      "enum": [
                        "Purgeable",
                        "Recoverable+Purgeable",
                        "Recoverable",
                        "Recoverable+ProtectedSubscription",
                        "CustomizedRecoverable+Purgeable",
                        "CustomizedRecoverable",
                        "CustomizedRecoverable+ProtectedSubscription"
                      ],
                      "x-ms-enum": {
                        "name": "DeletionRecoveryLevel",
                        "modelAsString": true
                      },
                      "readOnly": true,
                      "x-nullable": false
                    }
                  },
                  "description": "The SAS definition management attributes."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Application specific metadata in the form of key-value pairs",
                  "readOnly": true
                }
              },
              "description": "A SAS definition bundle consists of key vault SAS definition details plus its attributes."
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Get Storage Sas Definition": {
            "$ref": "./examples/getStorageSasDefinition.json"
          }
        }
      },
      "put": {
        "tags": [
          "Storage"
        ],
        "operationId": "SetSasDefinition",
        "description": "Creates or updates a new SAS definition for the specified storage account. This operation requires the storage/setsas permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "name": "sas-definition-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the SAS definition. The value you provide may be copied globally for the purpose of running the service. The value provided should not include personally identifiable or sensitive information."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "properties": {
                "templateUri": {
                  "type": "string",
                  "description": "The SAS definition token template signed with an arbitrary key.  Tokens created according to the SAS definition will have the same properties as the template."
                },
                "sasType": {
                  "type": "string",
                  "description": "The type of SAS token the SAS definition will create.",
                  "enum": [
                    "account",
                    "service"
                  ],
                  "x-ms-enum": {
                    "name": "SasTokenType",
                    "modelAsString": true
                  }
                },
                "validityPeriod": {
                  "type": "string",
                  "description": "The validity period of SAS tokens created according to the SAS definition."
                },
                "attributes": {
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "the enabled state of the object."
                    },
                    "created": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Creation time in UTC."
                    },
                    "updated": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Last updated time in UTC."
                    },
                    "recoverableDays": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true,
                      "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete enabled, otherwise 0."
                    },
                    "recoveryLevel": {
                      "type": "string",
                      "description": "Reflects the deletion recovery level currently in effect for SAS definitions in the current vault. If it contains 'Purgeable' the SAS definition can be permanently deleted by a privileged user; otherwise, only the system can purge the SAS definition, at the end of the retention interval.",
                      "enum": [
                        "Purgeable",
                        "Recoverable+Purgeable",
                        "Recoverable",
                        "Recoverable+ProtectedSubscription",
                        "CustomizedRecoverable+Purgeable",
                        "CustomizedRecoverable",
                        "CustomizedRecoverable+ProtectedSubscription"
                      ],
                      "x-ms-enum": {
                        "name": "DeletionRecoveryLevel",
                        "modelAsString": true
                      },
                      "readOnly": true,
                      "x-nullable": false
                    }
                  },
                  "description": "The SAS definition management attributes."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Application specific metadata in the form of key-value pairs."
                }
              },
              "description": "The SAS definition create parameters.",
              "required": [
                "templateUri",
                "sasType",
                "validityPeriod"
              ]
            },
            "description": "The parameters to create a SAS definition."
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The created SAS definition.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The SAS definition id.",
                  "readOnly": true
                },
                "sid": {
                  "x-ms-client-name": "SecretId",
                  "type": "string",
                  "description": "Storage account SAS definition secret id.",
                  "readOnly": true
                },
                "templateUri": {
                  "type": "string",
                  "description": "The SAS definition token template signed with an arbitrary key.  Tokens created according to the SAS definition will have the same properties as the template.",
                  "readOnly": true
                },
                "sasType": {
                  "type": "string",
                  "description": "The type of SAS token the SAS definition will create.",
                  "enum": [
                    "account",
                    "service"
                  ],
                  "x-ms-enum": {
                    "name": "SasTokenType",
                    "modelAsString": true
                  },
                  "readOnly": true
                },
                "validityPeriod": {
                  "type": "string",
                  "description": "The validity period of SAS tokens created according to the SAS definition.",
                  "readOnly": true
                },
                "attributes": {
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "the enabled state of the object."
                    },
                    "created": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Creation time in UTC."
                    },
                    "updated": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Last updated time in UTC."
                    },
                    "recoverableDays": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true,
                      "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete enabled, otherwise 0."
                    },
                    "recoveryLevel": {
                      "type": "string",
                      "description": "Reflects the deletion recovery level currently in effect for SAS definitions in the current vault. If it contains 'Purgeable' the SAS definition can be permanently deleted by a privileged user; otherwise, only the system can purge the SAS definition, at the end of the retention interval.",
                      "enum": [
                        "Purgeable",
                        "Recoverable+Purgeable",
                        "Recoverable",
                        "Recoverable+ProtectedSubscription",
                        "CustomizedRecoverable+Purgeable",
                        "CustomizedRecoverable",
                        "CustomizedRecoverable+ProtectedSubscription"
                      ],
                      "x-ms-enum": {
                        "name": "DeletionRecoveryLevel",
                        "modelAsString": true
                      },
                      "readOnly": true,
                      "x-nullable": false
                    }
                  },
                  "description": "The SAS definition management attributes."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Application specific metadata in the form of key-value pairs",
                  "readOnly": true
                }
              },
              "description": "A SAS definition bundle consists of key vault SAS definition details plus its attributes."
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Set Storage Sas definition": {
            "$ref": "./examples/setStorageSasDefinition.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Storage"
        ],
        "operationId": "UpdateSasDefinition",
        "description": "Updates the specified attributes associated with the given SAS definition. This operation requires the storage/setsas permission.",
        "parameters": [
          {
            "name": "storage-account-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the storage account."
          },
          {
            "name": "sas-definition-name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z]+$",
            "description": "The name of the SAS definition."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "properties": {
                "templateUri": {
                  "type": "string",
                  "description": "The SAS definition token template signed with an arbitrary key.  Tokens created according to the SAS definition will have the same properties as the template."
                },
                "sasType": {
                  "type": "string",
                  "description": "The type of SAS token the SAS definition will create.",
                  "enum": [
                    "account",
                    "service"
                  ],
                  "x-ms-enum": {
                    "name": "SasTokenType",
                    "modelAsString": true
                  }
                },
                "validityPeriod": {
                  "type": "string",
                  "description": "The validity period of SAS tokens created according to the SAS definition."
                },
                "attributes": {
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "the enabled state of the object."
                    },
                    "created": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Creation time in UTC."
                    },
                    "updated": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Last updated time in UTC."
                    },
                    "recoverableDays": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true,
                      "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete enabled, otherwise 0."
                    },
                    "recoveryLevel": {
                      "type": "string",
                      "description": "Reflects the deletion recovery level currently in effect for SAS definitions in the current vault. If it contains 'Purgeable' the SAS definition can be permanently deleted by a privileged user; otherwise, only the system can purge the SAS definition, at the end of the retention interval.",
                      "enum": [
                        "Purgeable",
                        "Recoverable+Purgeable",
                        "Recoverable",
                        "Recoverable+ProtectedSubscription",
                        "CustomizedRecoverable+Purgeable",
                        "CustomizedRecoverable",
                        "CustomizedRecoverable+ProtectedSubscription"
                      ],
                      "x-ms-enum": {
                        "name": "DeletionRecoveryLevel",
                        "modelAsString": true
                      },
                      "readOnly": true,
                      "x-nullable": false
                    }
                  },
                  "description": "The SAS definition management attributes."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Application specific metadata in the form of key-value pairs."
                }
              },
              "description": "The SAS definition update parameters."
            },
            "description": "The parameters to update a SAS definition."
          },
          {
            "$ref": "common.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The updated SAS definition.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The SAS definition id.",
                  "readOnly": true
                },
                "sid": {
                  "x-ms-client-name": "SecretId",
                  "type": "string",
                  "description": "Storage account SAS definition secret id.",
                  "readOnly": true
                },
                "templateUri": {
                  "type": "string",
                  "description": "The SAS definition token template signed with an arbitrary key.  Tokens created according to the SAS definition will have the same properties as the template.",
                  "readOnly": true
                },
                "sasType": {
                  "type": "string",
                  "description": "The type of SAS token the SAS definition will create.",
                  "enum": [
                    "account",
                    "service"
                  ],
                  "x-ms-enum": {
                    "name": "SasTokenType",
                    "modelAsString": true
                  },
                  "readOnly": true
                },
                "validityPeriod": {
                  "type": "string",
                  "description": "The validity period of SAS tokens created according to the SAS definition.",
                  "readOnly": true
                },
                "attributes": {
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "the enabled state of the object."
                    },
                    "created": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Creation time in UTC."
                    },
                    "updated": {
                      "type": "integer",
                      "format": "unixtime",
                      "readOnly": true,
                      "description": "Last updated time in UTC."
                    },
                    "recoverableDays": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true,
                      "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete enabled, otherwise 0."
                    },
                    "recoveryLevel": {
                      "type": "string",
                      "description": "Reflects the deletion recovery level currently in effect for SAS definitions in the current vault. If it contains 'Purgeable' the SAS definition can be permanently deleted by a privileged user; otherwise, only the system can purge the SAS definition, at the end of the retention interval.",
                      "enum": [
                        "Purgeable",
                        "Recoverable+Purgeable",
                        "Recoverable",
                        "Recoverable+ProtectedSubscription",
                        "CustomizedRecoverable+Purgeable",
                        "CustomizedRecoverable",
                        "CustomizedRecoverable+ProtectedSubscription"
                      ],
                      "x-ms-enum": {
                        "name": "DeletionRecoveryLevel",
                        "modelAsString": true
                      },
                      "readOnly": true,
                      "x-nullable": false
                    }
                  },
                  "description": "The SAS definition management attributes."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Application specific metadata in the form of key-value pairs",
                  "readOnly": true
                }
              },
              "description": "A SAS definition bundle consists of key vault SAS definition details plus its attributes."
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/KeyVaultError"
            }
          }
        },
        "x-ms-examples": {
          "Update Storage Sas definition": {
            "$ref": "./examples/updateStorageSasDefinition.json"
          }
        }
      }
    }
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/deletedsecrets"
    ],
    "rhs": {
      "get": {
        "operationId": "GetDeletedSecrets",
        "summary": "Lists deleted secrets for the specified vault.",
        "description": "The Get Deleted Secrets operation returns the secrets that have been deleted\nfor a vault enabled for soft-delete. This operation requires the secrets/list\npermission.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "maxresults",
            "in": "query",
            "description": "Maximum number of results to return in a page. If not specified the service\nwill return up to 25 results.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 25
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Paged collection of DeletedSecretItem items",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The DeletedSecretItem items on this page",
                  "items": {
                    "type": "object",
                    "description": "The deleted secret item containing metadata about the deleted secret.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Secret identifier."
                      },
                      "attributes": {
                        "type": "object",
                        "description": "The secret management attributes.",
                        "properties": {
                          "recoverableDays": {
                            "type": "integer",
                            "format": "int32",
                            "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete\nenabled, otherwise 0.",
                            "readOnly": true
                          },
                          "recoveryLevel": {
                            "type": "string",
                            "description": "Reflects the deletion recovery level currently in effect for secrets in the\ncurrent vault. If it contains 'Purgeable', the secret can be permanently\ndeleted by a privileged user; otherwise, only the system can purge the secret,\nat the end of the retention interval.",
                            "enum": [
                              "Purgeable",
                              "Recoverable+Purgeable",
                              "Recoverable",
                              "Recoverable+ProtectedSubscription",
                              "CustomizedRecoverable+Purgeable",
                              "CustomizedRecoverable",
                              "CustomizedRecoverable+ProtectedSubscription"
                            ],
                            "x-ms-enum": {
                              "name": "DeletionRecoveryLevel",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Purgeable",
                                  "value": "Purgeable",
                                  "description": "Denotes a vault state in which deletion is an irreversible operation, without\nthe possibility for recovery. This level corresponds to no protection being\navailable against a Delete operation; the data is irretrievably lost upon\naccepting a Delete operation at the entity level or higher (vault, resource\ngroup, subscription etc.)"
                                },
                                {
                                  "name": "Recoverable_Purgeable",
                                  "value": "Recoverable+Purgeable",
                                  "description": "Denotes a vault state in which deletion is recoverable, and which also permits\nimmediate and permanent deletion (i.e. purge). This level guarantees the\nrecoverability of the deleted entity during the retention interval (90 days),\nunless a Purge operation is requested, or the subscription is cancelled. System\nwil permanently delete it after 90 days, if not recovered"
                                },
                                {
                                  "name": "Recoverable",
                                  "value": "Recoverable",
                                  "description": "Denotes a vault state in which deletion is recoverable without the possibility\nfor immediate and permanent deletion (i.e. purge). This level guarantees the\nrecoverability of the deleted entity during the retention interval(90 days) and\nwhile the subscription is still available. System wil permanently delete it\nafter 90 days, if not recovered"
                                },
                                {
                                  "name": "Recoverable_ProtectedSubscription",
                                  "value": "Recoverable+ProtectedSubscription",
                                  "description": "Denotes a vault and subscription state in which deletion is recoverable within\nretention interval (90 days), immediate and permanent deletion (i.e. purge) is\nnot permitted, and in which the subscription itself  cannot be permanently\ncanceled. System wil permanently delete it after 90 days, if not recovered"
                                },
                                {
                                  "name": "CustomizedRecoverable_Purgeable",
                                  "value": "CustomizedRecoverable+Purgeable",
                                  "description": "Denotes a vault state in which deletion is recoverable, and which also permits\nimmediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays\n< 90). This level guarantees the recoverability of the deleted entity during\nthe retention interval, unless a Purge operation is requested, or the\nsubscription is cancelled."
                                },
                                {
                                  "name": "CustomizedRecoverable",
                                  "value": "CustomizedRecoverable",
                                  "description": "Denotes a vault state in which deletion is recoverable without the possibility\nfor immediate and permanent deletion (i.e. purge when 7<=\nSoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the\ndeleted entity during the retention interval and while the subscription is\nstill available."
                                },
                                {
                                  "name": "CustomizedRecoverable_ProtectedSubscription",
                                  "value": "CustomizedRecoverable+ProtectedSubscription",
                                  "description": "Denotes a vault and subscription state in which deletion is recoverable,\nimmediate and permanent deletion (i.e. purge) is not permitted, and in which\nthe subscription itself cannot be permanently canceled when 7<=\nSoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the\ndeleted entity during the retention interval, and also reflects the fact that\nthe subscription itself cannot be cancelled."
                                }
                              ]
                            }
                          }
                        },
                        "allOf": [
                          {
                            "type": "object",
                            "description": "The object attributes managed by the KeyVault service.",
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "description": "Determines whether the object is enabled."
                              },
                              "nbf": {
                                "type": "string",
                                "format": "time",
                                "description": "Not before date in UTC.",
                                "x-ms-client-name": "notBefore"
                              },
                              "exp": {
                                "type": "string",
                                "format": "time",
                                "description": "Expiry date in UTC.",
                                "x-ms-client-name": "expires"
                              },
                              "created": {
                                "type": "string",
                                "format": "time",
                                "description": "Creation time in UTC.",
                                "readOnly": true
                              },
                              "updated": {
                                "type": "string",
                                "format": "time",
                                "description": "Last updated time in UTC.",
                                "readOnly": true
                              }
                            }
                          }
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "description": "Application specific metadata in the form of key-value pairs.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "contentType": {
                        "type": "string",
                        "description": "Type of the secret value such as a password."
                      },
                      "managed": {
                        "type": "boolean",
                        "description": "True if the secret's lifetime is managed by key vault. If this is a key backing\na certificate, then managed will be true.",
                        "readOnly": true
                      },
                      "recoveryId": {
                        "type": "string",
                        "description": "The url of the recovery object, used to identify and recover the deleted secret."
                      },
                      "scheduledPurgeDate": {
                        "type": "string",
                        "format": "time",
                        "description": "The time when the secret is scheduled to be purged, in UTC",
                        "readOnly": true
                      },
                      "deletedDate": {
                        "type": "string",
                        "format": "time",
                        "description": "The time when the secret was deleted, in UTC",
                        "readOnly": true
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "description": "A response containing error details.",
              "properties": {
                "error": {
                  "type": "object",
                  "description": "The error object.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "One of a server-defined set of error codes."
                    },
                    "message": {
                      "type": "string",
                      "description": "A human-readable representation of the error."
                    },
                    "target": {
                      "type": "string",
                      "description": "The target of the error."
                    },
                    "details": {
                      "type": "array",
                      "description": "An array of details about specific errors that led to this reported error.",
                      "items": {
                        "type": "object",
                        "description": "The error object.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "One of a server-defined set of error codes."
                          },
                          "message": {
                            "type": "string",
                            "description": "A human-readable representation of the error."
                          },
                          "target": {
                            "type": "string",
                            "description": "The target of the error."
                          },
                          "details": {
                            "type": "array",
                            "description": "An array of details about specific errors that led to this reported error.",
                            "items": {
                              "type": "object",
                              "description": "The error object.",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "One of a server-defined set of error codes."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "A human-readable representation of the error."
                                },
                                "target": {
                                  "type": "string",
                                  "description": "The target of the error."
                                },
                                "details": {
                                  "type": "array",
                                  "description": "An array of details about specific errors that led to this reported error.",
                                  "items": {
                                    "$ref": "#/definitions/Azure.Core.Foundations.Error"
                                  },
                                  "x-ms-identifiers": []
                                },
                                "innererror": {
                                  "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                                }
                              },
                              "required": [
                                "code",
                                "message"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "innererror": {
                            "type": "object",
                            "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "One of a server-defined set of error codes."
                              },
                              "innererror": {
                                "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                              }
                            }
                          }
                        },
                        "required": [
                          "code",
                          "message"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "innererror": {
                      "type": "object",
                      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "One of a server-defined set of error codes."
                        },
                        "innererror": {
                          "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/deletedsecrets/{secretName}"
    ],
    "rhs": {
      "get": {
        "operationId": "GetDeletedSecret",
        "summary": "Gets the specified deleted secret.",
        "description": "The Get Deleted Secret operation returns the specified deleted secret along\nwith its attributes. This operation requires the secrets/get permission.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "secretName",
            "in": "path",
            "description": "The name of the secret.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "A Deleted Secret consisting of its previous id, attributes and its tags, as\nwell as information on when it will be purged.",
              "properties": {
                "recoveryId": {
                  "type": "string",
                  "description": "The url of the recovery object, used to identify and recover the deleted secret."
                },
                "scheduledPurgeDate": {
                  "type": "string",
                  "format": "time",
                  "description": "The time when the secret is scheduled to be purged, in UTC",
                  "readOnly": true
                },
                "deletedDate": {
                  "type": "string",
                  "format": "time",
                  "description": "The time when the secret was deleted, in UTC",
                  "readOnly": true
                }
              },
              "allOf": [
                {
                  "type": "object",
                  "description": "A secret consisting of a value, id and its attributes.",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The secret value."
                    },
                    "id": {
                      "type": "string",
                      "description": "The secret id."
                    },
                    "contentType": {
                      "type": "string",
                      "description": "The content type of the secret."
                    },
                    "attributes": {
                      "type": "object",
                      "description": "The secret management attributes.",
                      "properties": {
                        "recoverableDays": {
                          "type": "integer",
                          "format": "int32",
                          "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete\nenabled, otherwise 0.",
                          "readOnly": true
                        },
                        "recoveryLevel": {
                          "type": "string",
                          "description": "Reflects the deletion recovery level currently in effect for secrets in the\ncurrent vault. If it contains 'Purgeable', the secret can be permanently\ndeleted by a privileged user; otherwise, only the system can purge the secret,\nat the end of the retention interval.",
                          "enum": [
                            "Purgeable",
                            "Recoverable+Purgeable",
                            "Recoverable",
                            "Recoverable+ProtectedSubscription",
                            "CustomizedRecoverable+Purgeable",
                            "CustomizedRecoverable",
                            "CustomizedRecoverable+ProtectedSubscription"
                          ],
                          "x-ms-enum": {
                            "name": "DeletionRecoveryLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Purgeable",
                                "value": "Purgeable",
                                "description": "Denotes a vault state in which deletion is an irreversible operation, without\nthe possibility for recovery. This level corresponds to no protection being\navailable against a Delete operation; the data is irretrievably lost upon\naccepting a Delete operation at the entity level or higher (vault, resource\ngroup, subscription etc.)"
                              },
                              {
                                "name": "Recoverable_Purgeable",
                                "value": "Recoverable+Purgeable",
                                "description": "Denotes a vault state in which deletion is recoverable, and which also permits\nimmediate and permanent deletion (i.e. purge). This level guarantees the\nrecoverability of the deleted entity during the retention interval (90 days),\nunless a Purge operation is requested, or the subscription is cancelled. System\nwil permanently delete it after 90 days, if not recovered"
                              },
                              {
                                "name": "Recoverable",
                                "value": "Recoverable",
                                "description": "Denotes a vault state in which deletion is recoverable without the possibility\nfor immediate and permanent deletion (i.e. purge). This level guarantees the\nrecoverability of the deleted entity during the retention interval(90 days) and\nwhile the subscription is still available. System wil permanently delete it\nafter 90 days, if not recovered"
                              },
                              {
                                "name": "Recoverable_ProtectedSubscription",
                                "value": "Recoverable+ProtectedSubscription",
                                "description": "Denotes a vault and subscription state in which deletion is recoverable within\nretention interval (90 days), immediate and permanent deletion (i.e. purge) is\nnot permitted, and in which the subscription itself  cannot be permanently\ncanceled. System wil permanently delete it after 90 days, if not recovered"
                              },
                              {
                                "name": "CustomizedRecoverable_Purgeable",
                                "value": "CustomizedRecoverable+Purgeable",
                                "description": "Denotes a vault state in which deletion is recoverable, and which also permits\nimmediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays\n< 90). This level guarantees the recoverability of the deleted entity during\nthe retention interval, unless a Purge operation is requested, or the\nsubscription is cancelled."
                              },
                              {
                                "name": "CustomizedRecoverable",
                                "value": "CustomizedRecoverable",
                                "description": "Denotes a vault state in which deletion is recoverable without the possibility\nfor immediate and permanent deletion (i.e. purge when 7<=\nSoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the\ndeleted entity during the retention interval and while the subscription is\nstill available."
                              },
                              {
                                "name": "CustomizedRecoverable_ProtectedSubscription",
                                "value": "CustomizedRecoverable+ProtectedSubscription",
                                "description": "Denotes a vault and subscription state in which deletion is recoverable,\nimmediate and permanent deletion (i.e. purge) is not permitted, and in which\nthe subscription itself cannot be permanently canceled when 7<=\nSoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the\ndeleted entity during the retention interval, and also reflects the fact that\nthe subscription itself cannot be cancelled."
                              }
                            ]
                          }
                        }
                      },
                      "allOf": [
                        {
                          "type": "object",
                          "description": "The object attributes managed by the KeyVault service.",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "description": "Determines whether the object is enabled."
                            },
                            "nbf": {
                              "type": "string",
                              "format": "time",
                              "description": "Not before date in UTC.",
                              "x-ms-client-name": "notBefore"
                            },
                            "exp": {
                              "type": "string",
                              "format": "time",
                              "description": "Expiry date in UTC.",
                              "x-ms-client-name": "expires"
                            },
                            "created": {
                              "type": "string",
                              "format": "time",
                              "description": "Creation time in UTC.",
                              "readOnly": true
                            },
                            "updated": {
                              "type": "string",
                              "format": "time",
                              "description": "Last updated time in UTC.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    },
                    "tags": {
                      "type": "object",
                      "description": "Application specific metadata in the form of key-value pairs.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "kid": {
                      "type": "string",
                      "description": "If this is a secret backing a KV certificate, then this field specifies the\ncorresponding key backing the KV certificate.",
                      "readOnly": true
                    },
                    "managed": {
                      "type": "boolean",
                      "description": "True if the secret's lifetime is managed by key vault. If this is a secret\nbacking a certificate, then managed will be true.",
                      "readOnly": true
                    }
                  }
                }
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "description": "A response containing error details.",
              "properties": {
                "error": {
                  "type": "object",
                  "description": "The error object.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "One of a server-defined set of error codes."
                    },
                    "message": {
                      "type": "string",
                      "description": "A human-readable representation of the error."
                    },
                    "target": {
                      "type": "string",
                      "description": "The target of the error."
                    },
                    "details": {
                      "type": "array",
                      "description": "An array of details about specific errors that led to this reported error.",
                      "items": {
                        "type": "object",
                        "description": "The error object.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "One of a server-defined set of error codes."
                          },
                          "message": {
                            "type": "string",
                            "description": "A human-readable representation of the error."
                          },
                          "target": {
                            "type": "string",
                            "description": "The target of the error."
                          },
                          "details": {
                            "type": "array",
                            "description": "An array of details about specific errors that led to this reported error.",
                            "items": {
                              "type": "object",
                              "description": "The error object.",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "One of a server-defined set of error codes."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "A human-readable representation of the error."
                                },
                                "target": {
                                  "type": "string",
                                  "description": "The target of the error."
                                },
                                "details": {
                                  "type": "array",
                                  "description": "An array of details about specific errors that led to this reported error.",
                                  "items": {
                                    "$ref": "#/definitions/Azure.Core.Foundations.Error"
                                  },
                                  "x-ms-identifiers": []
                                },
                                "innererror": {
                                  "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                                }
                              },
                              "required": [
                                "code",
                                "message"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "innererror": {
                            "type": "object",
                            "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "One of a server-defined set of error codes."
                              },
                              "innererror": {
                                "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                              }
                            }
                          }
                        },
                        "required": [
                          "code",
                          "message"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "innererror": {
                      "type": "object",
                      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "One of a server-defined set of error codes."
                        },
                        "innererror": {
                          "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "PurgeDeletedSecret",
        "summary": "Permanently deletes the specified secret.",
        "description": "The purge deleted secret operation removes the secret permanently, without the\npossibility of recovery. This operation can only be enabled on a soft-delete\nenabled vault. This operation requires the secrets/purge permission.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "secretName",
            "in": "path",
            "description": "The name of the secret.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "description": "A response containing error details.",
              "properties": {
                "error": {
                  "type": "object",
                  "description": "The error object.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "One of a server-defined set of error codes."
                    },
                    "message": {
                      "type": "string",
                      "description": "A human-readable representation of the error."
                    },
                    "target": {
                      "type": "string",
                      "description": "The target of the error."
                    },
                    "details": {
                      "type": "array",
                      "description": "An array of details about specific errors that led to this reported error.",
                      "items": {
                        "type": "object",
                        "description": "The error object.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "One of a server-defined set of error codes."
                          },
                          "message": {
                            "type": "string",
                            "description": "A human-readable representation of the error."
                          },
                          "target": {
                            "type": "string",
                            "description": "The target of the error."
                          },
                          "details": {
                            "type": "array",
                            "description": "An array of details about specific errors that led to this reported error.",
                            "items": {
                              "type": "object",
                              "description": "The error object.",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "One of a server-defined set of error codes."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "A human-readable representation of the error."
                                },
                                "target": {
                                  "type": "string",
                                  "description": "The target of the error."
                                },
                                "details": {
                                  "type": "array",
                                  "description": "An array of details about specific errors that led to this reported error.",
                                  "items": {
                                    "$ref": "#/definitions/Azure.Core.Foundations.Error"
                                  },
                                  "x-ms-identifiers": []
                                },
                                "innererror": {
                                  "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                                }
                              },
                              "required": [
                                "code",
                                "message"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "innererror": {
                            "type": "object",
                            "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "One of a server-defined set of error codes."
                              },
                              "innererror": {
                                "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                              }
                            }
                          }
                        },
                        "required": [
                          "code",
                          "message"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "innererror": {
                      "type": "object",
                      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "One of a server-defined set of error codes."
                        },
                        "innererror": {
                          "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    }
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/deletedsecrets/{secretName}/recover"
    ],
    "rhs": {
      "post": {
        "operationId": "RecoverDeletedSecret",
        "summary": "Recovers the deleted secret to the latest version.",
        "description": "Recovers the deleted secret in the specified vault. This operation can only be\nperformed on a soft-delete enabled vault. This operation requires the\nsecrets/recover permission.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "secretName",
            "in": "path",
            "description": "The name of the deleted secret.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "A secret consisting of a value, id and its attributes.",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "The secret value."
                },
                "id": {
                  "type": "string",
                  "description": "The secret id."
                },
                "contentType": {
                  "type": "string",
                  "description": "The content type of the secret."
                },
                "attributes": {
                  "type": "object",
                  "description": "The secret management attributes.",
                  "properties": {
                    "recoverableDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete\nenabled, otherwise 0.",
                      "readOnly": true
                    },
                    "recoveryLevel": {
                      "type": "string",
                      "description": "Reflects the deletion recovery level currently in effect for secrets in the\ncurrent vault. If it contains 'Purgeable', the secret can be permanently\ndeleted by a privileged user; otherwise, only the system can purge the secret,\nat the end of the retention interval.",
                      "enum": [
                        "Purgeable",
                        "Recoverable+Purgeable",
                        "Recoverable",
                        "Recoverable+ProtectedSubscription",
                        "CustomizedRecoverable+Purgeable",
                        "CustomizedRecoverable",
                        "CustomizedRecoverable+ProtectedSubscription"
                      ],
                      "x-ms-enum": {
                        "name": "DeletionRecoveryLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Purgeable",
                            "value": "Purgeable",
                            "description": "Denotes a vault state in which deletion is an irreversible operation, without\nthe possibility for recovery. This level corresponds to no protection being\navailable against a Delete operation; the data is irretrievably lost upon\naccepting a Delete operation at the entity level or higher (vault, resource\ngroup, subscription etc.)"
                          },
                          {
                            "name": "Recoverable_Purgeable",
                            "value": "Recoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits\nimmediate and permanent deletion (i.e. purge). This level guarantees the\nrecoverability of the deleted entity during the retention interval (90 days),\nunless a Purge operation is requested, or the subscription is cancelled. System\nwil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "name": "Recoverable",
                            "value": "Recoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility\nfor immediate and permanent deletion (i.e. purge). This level guarantees the\nrecoverability of the deleted entity during the retention interval(90 days) and\nwhile the subscription is still available. System wil permanently delete it\nafter 90 days, if not recovered"
                          },
                          {
                            "name": "Recoverable_ProtectedSubscription",
                            "value": "Recoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable within\nretention interval (90 days), immediate and permanent deletion (i.e. purge) is\nnot permitted, and in which the subscription itself  cannot be permanently\ncanceled. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "name": "CustomizedRecoverable_Purgeable",
                            "value": "CustomizedRecoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits\nimmediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays\n< 90). This level guarantees the recoverability of the deleted entity during\nthe retention interval, unless a Purge operation is requested, or the\nsubscription is cancelled."
                          },
                          {
                            "name": "CustomizedRecoverable",
                            "value": "CustomizedRecoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility\nfor immediate and permanent deletion (i.e. purge when 7<=\nSoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the\ndeleted entity during the retention interval and while the subscription is\nstill available."
                          },
                          {
                            "name": "CustomizedRecoverable_ProtectedSubscription",
                            "value": "CustomizedRecoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable,\nimmediate and permanent deletion (i.e. purge) is not permitted, and in which\nthe subscription itself cannot be permanently canceled when 7<=\nSoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the\ndeleted entity during the retention interval, and also reflects the fact that\nthe subscription itself cannot be cancelled."
                          }
                        ]
                      }
                    }
                  },
                  "allOf": [
                    {
                      "type": "object",
                      "description": "The object attributes managed by the KeyVault service.",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "Determines whether the object is enabled."
                        },
                        "nbf": {
                          "type": "string",
                          "format": "time",
                          "description": "Not before date in UTC.",
                          "x-ms-client-name": "notBefore"
                        },
                        "exp": {
                          "type": "string",
                          "format": "time",
                          "description": "Expiry date in UTC.",
                          "x-ms-client-name": "expires"
                        },
                        "created": {
                          "type": "string",
                          "format": "time",
                          "description": "Creation time in UTC.",
                          "readOnly": true
                        },
                        "updated": {
                          "type": "string",
                          "format": "time",
                          "description": "Last updated time in UTC.",
                          "readOnly": true
                        }
                      }
                    }
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Application specific metadata in the form of key-value pairs.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "kid": {
                  "type": "string",
                  "description": "If this is a secret backing a KV certificate, then this field specifies the\ncorresponding key backing the KV certificate.",
                  "readOnly": true
                },
                "managed": {
                  "type": "boolean",
                  "description": "True if the secret's lifetime is managed by key vault. If this is a secret\nbacking a certificate, then managed will be true.",
                  "readOnly": true
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "description": "A response containing error details.",
              "properties": {
                "error": {
                  "type": "object",
                  "description": "The error object.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "One of a server-defined set of error codes."
                    },
                    "message": {
                      "type": "string",
                      "description": "A human-readable representation of the error."
                    },
                    "target": {
                      "type": "string",
                      "description": "The target of the error."
                    },
                    "details": {
                      "type": "array",
                      "description": "An array of details about specific errors that led to this reported error.",
                      "items": {
                        "type": "object",
                        "description": "The error object.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "One of a server-defined set of error codes."
                          },
                          "message": {
                            "type": "string",
                            "description": "A human-readable representation of the error."
                          },
                          "target": {
                            "type": "string",
                            "description": "The target of the error."
                          },
                          "details": {
                            "type": "array",
                            "description": "An array of details about specific errors that led to this reported error.",
                            "items": {
                              "type": "object",
                              "description": "The error object.",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "One of a server-defined set of error codes."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "A human-readable representation of the error."
                                },
                                "target": {
                                  "type": "string",
                                  "description": "The target of the error."
                                },
                                "details": {
                                  "type": "array",
                                  "description": "An array of details about specific errors that led to this reported error.",
                                  "items": {
                                    "$ref": "#/definitions/Azure.Core.Foundations.Error"
                                  },
                                  "x-ms-identifiers": []
                                },
                                "innererror": {
                                  "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                                }
                              },
                              "required": [
                                "code",
                                "message"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "innererror": {
                            "type": "object",
                            "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "One of a server-defined set of error codes."
                              },
                              "innererror": {
                                "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                              }
                            }
                          }
                        },
                        "required": [
                          "code",
                          "message"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "innererror": {
                      "type": "object",
                      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "One of a server-defined set of error codes."
                        },
                        "innererror": {
                          "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    }
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/secrets"
    ],
    "rhs": {
      "get": {
        "operationId": "GetSecrets",
        "summary": "List secrets in a specified key vault.",
        "description": "The Get Secrets operation is applicable to the entire vault. However, only the\nbase secret identifier and its attributes are provided in the response.\nIndividual secret versions are not listed in the response. This operation\nrequires the secrets/list permission.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "maxresults",
            "in": "query",
            "description": "Maximum number of results to return in a page. If not specified the service\nwill return up to 25 results.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 25
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Paged collection of SecretItem items",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The SecretItem items on this page",
                  "items": {
                    "type": "object",
                    "description": "The secret item containing secret metadata.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Secret identifier."
                      },
                      "attributes": {
                        "type": "object",
                        "description": "The secret management attributes.",
                        "properties": {
                          "recoverableDays": {
                            "type": "integer",
                            "format": "int32",
                            "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete\nenabled, otherwise 0.",
                            "readOnly": true
                          },
                          "recoveryLevel": {
                            "type": "string",
                            "description": "Reflects the deletion recovery level currently in effect for secrets in the\ncurrent vault. If it contains 'Purgeable', the secret can be permanently\ndeleted by a privileged user; otherwise, only the system can purge the secret,\nat the end of the retention interval.",
                            "enum": [
                              "Purgeable",
                              "Recoverable+Purgeable",
                              "Recoverable",
                              "Recoverable+ProtectedSubscription",
                              "CustomizedRecoverable+Purgeable",
                              "CustomizedRecoverable",
                              "CustomizedRecoverable+ProtectedSubscription"
                            ],
                            "x-ms-enum": {
                              "name": "DeletionRecoveryLevel",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Purgeable",
                                  "value": "Purgeable",
                                  "description": "Denotes a vault state in which deletion is an irreversible operation, without\nthe possibility for recovery. This level corresponds to no protection being\navailable against a Delete operation; the data is irretrievably lost upon\naccepting a Delete operation at the entity level or higher (vault, resource\ngroup, subscription etc.)"
                                },
                                {
                                  "name": "Recoverable_Purgeable",
                                  "value": "Recoverable+Purgeable",
                                  "description": "Denotes a vault state in which deletion is recoverable, and which also permits\nimmediate and permanent deletion (i.e. purge). This level guarantees the\nrecoverability of the deleted entity during the retention interval (90 days),\nunless a Purge operation is requested, or the subscription is cancelled. System\nwil permanently delete it after 90 days, if not recovered"
                                },
                                {
                                  "name": "Recoverable",
                                  "value": "Recoverable",
                                  "description": "Denotes a vault state in which deletion is recoverable without the possibility\nfor immediate and permanent deletion (i.e. purge). This level guarantees the\nrecoverability of the deleted entity during the retention interval(90 days) and\nwhile the subscription is still available. System wil permanently delete it\nafter 90 days, if not recovered"
                                },
                                {
                                  "name": "Recoverable_ProtectedSubscription",
                                  "value": "Recoverable+ProtectedSubscription",
                                  "description": "Denotes a vault and subscription state in which deletion is recoverable within\nretention interval (90 days), immediate and permanent deletion (i.e. purge) is\nnot permitted, and in which the subscription itself  cannot be permanently\ncanceled. System wil permanently delete it after 90 days, if not recovered"
                                },
                                {
                                  "name": "CustomizedRecoverable_Purgeable",
                                  "value": "CustomizedRecoverable+Purgeable",
                                  "description": "Denotes a vault state in which deletion is recoverable, and which also permits\nimmediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays\n< 90). This level guarantees the recoverability of the deleted entity during\nthe retention interval, unless a Purge operation is requested, or the\nsubscription is cancelled."
                                },
                                {
                                  "name": "CustomizedRecoverable",
                                  "value": "CustomizedRecoverable",
                                  "description": "Denotes a vault state in which deletion is recoverable without the possibility\nfor immediate and permanent deletion (i.e. purge when 7<=\nSoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the\ndeleted entity during the retention interval and while the subscription is\nstill available."
                                },
                                {
                                  "name": "CustomizedRecoverable_ProtectedSubscription",
                                  "value": "CustomizedRecoverable+ProtectedSubscription",
                                  "description": "Denotes a vault and subscription state in which deletion is recoverable,\nimmediate and permanent deletion (i.e. purge) is not permitted, and in which\nthe subscription itself cannot be permanently canceled when 7<=\nSoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the\ndeleted entity during the retention interval, and also reflects the fact that\nthe subscription itself cannot be cancelled."
                                }
                              ]
                            }
                          }
                        },
                        "allOf": [
                          {
                            "type": "object",
                            "description": "The object attributes managed by the KeyVault service.",
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "description": "Determines whether the object is enabled."
                              },
                              "nbf": {
                                "type": "string",
                                "format": "time",
                                "description": "Not before date in UTC.",
                                "x-ms-client-name": "notBefore"
                              },
                              "exp": {
                                "type": "string",
                                "format": "time",
                                "description": "Expiry date in UTC.",
                                "x-ms-client-name": "expires"
                              },
                              "created": {
                                "type": "string",
                                "format": "time",
                                "description": "Creation time in UTC.",
                                "readOnly": true
                              },
                              "updated": {
                                "type": "string",
                                "format": "time",
                                "description": "Last updated time in UTC.",
                                "readOnly": true
                              }
                            }
                          }
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "description": "Application specific metadata in the form of key-value pairs.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "contentType": {
                        "type": "string",
                        "description": "Type of the secret value such as a password."
                      },
                      "managed": {
                        "type": "boolean",
                        "description": "True if the secret's lifetime is managed by key vault. If this is a key backing\na certificate, then managed will be true.",
                        "readOnly": true
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "description": "A response containing error details.",
              "properties": {
                "error": {
                  "type": "object",
                  "description": "The error object.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "One of a server-defined set of error codes."
                    },
                    "message": {
                      "type": "string",
                      "description": "A human-readable representation of the error."
                    },
                    "target": {
                      "type": "string",
                      "description": "The target of the error."
                    },
                    "details": {
                      "type": "array",
                      "description": "An array of details about specific errors that led to this reported error.",
                      "items": {
                        "type": "object",
                        "description": "The error object.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "One of a server-defined set of error codes."
                          },
                          "message": {
                            "type": "string",
                            "description": "A human-readable representation of the error."
                          },
                          "target": {
                            "type": "string",
                            "description": "The target of the error."
                          },
                          "details": {
                            "type": "array",
                            "description": "An array of details about specific errors that led to this reported error.",
                            "items": {
                              "type": "object",
                              "description": "The error object.",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "One of a server-defined set of error codes."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "A human-readable representation of the error."
                                },
                                "target": {
                                  "type": "string",
                                  "description": "The target of the error."
                                },
                                "details": {
                                  "type": "array",
                                  "description": "An array of details about specific errors that led to this reported error.",
                                  "items": {
                                    "$ref": "#/definitions/Azure.Core.Foundations.Error"
                                  },
                                  "x-ms-identifiers": []
                                },
                                "innererror": {
                                  "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                                }
                              },
                              "required": [
                                "code",
                                "message"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "innererror": {
                            "type": "object",
                            "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "One of a server-defined set of error codes."
                              },
                              "innererror": {
                                "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                              }
                            }
                          }
                        },
                        "required": [
                          "code",
                          "message"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "innererror": {
                      "type": "object",
                      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "One of a server-defined set of error codes."
                        },
                        "innererror": {
                          "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/secrets/{secretName}"
    ],
    "rhs": {
      "put": {
        "operationId": "SetSecret",
        "summary": "Sets a secret in a specified key vault.",
        "description": "The SET operation adds a secret to the Azure Key Vault. If the named secret\nalready exists, Azure Key Vault creates a new version of that secret. This\noperation requires the secrets/set permission.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "secretName",
            "in": "path",
            "description": "The name of the secret. The value you provide may be copied globally for the\npurpose of running the service. The value provided should not include\npersonally identifiable or sensitive information.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-zA-Z-]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters for setting the secret.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The secret set parameters.",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "The value of the secret."
                },
                "tags": {
                  "type": "object",
                  "description": "Application specific metadata in the form of key-value pairs.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "contentType": {
                  "type": "string",
                  "description": "Type of the secret value such as a password."
                },
                "attributes": {
                  "type": "object",
                  "description": "The secret management attributes.",
                  "properties": {
                    "recoverableDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete\nenabled, otherwise 0.",
                      "readOnly": true
                    },
                    "recoveryLevel": {
                      "type": "string",
                      "description": "Reflects the deletion recovery level currently in effect for secrets in the\ncurrent vault. If it contains 'Purgeable', the secret can be permanently\ndeleted by a privileged user; otherwise, only the system can purge the secret,\nat the end of the retention interval.",
                      "enum": [
                        "Purgeable",
                        "Recoverable+Purgeable",
                        "Recoverable",
                        "Recoverable+ProtectedSubscription",
                        "CustomizedRecoverable+Purgeable",
                        "CustomizedRecoverable",
                        "CustomizedRecoverable+ProtectedSubscription"
                      ],
                      "x-ms-enum": {
                        "name": "DeletionRecoveryLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Purgeable",
                            "value": "Purgeable",
                            "description": "Denotes a vault state in which deletion is an irreversible operation, without\nthe possibility for recovery. This level corresponds to no protection being\navailable against a Delete operation; the data is irretrievably lost upon\naccepting a Delete operation at the entity level or higher (vault, resource\ngroup, subscription etc.)"
                          },
                          {
                            "name": "Recoverable_Purgeable",
                            "value": "Recoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits\nimmediate and permanent deletion (i.e. purge). This level guarantees the\nrecoverability of the deleted entity during the retention interval (90 days),\nunless a Purge operation is requested, or the subscription is cancelled. System\nwil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "name": "Recoverable",
                            "value": "Recoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility\nfor immediate and permanent deletion (i.e. purge). This level guarantees the\nrecoverability of the deleted entity during the retention interval(90 days) and\nwhile the subscription is still available. System wil permanently delete it\nafter 90 days, if not recovered"
                          },
                          {
                            "name": "Recoverable_ProtectedSubscription",
                            "value": "Recoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable within\nretention interval (90 days), immediate and permanent deletion (i.e. purge) is\nnot permitted, and in which the subscription itself  cannot be permanently\ncanceled. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "name": "CustomizedRecoverable_Purgeable",
                            "value": "CustomizedRecoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits\nimmediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays\n< 90). This level guarantees the recoverability of the deleted entity during\nthe retention interval, unless a Purge operation is requested, or the\nsubscription is cancelled."
                          },
                          {
                            "name": "CustomizedRecoverable",
                            "value": "CustomizedRecoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility\nfor immediate and permanent deletion (i.e. purge when 7<=\nSoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the\ndeleted entity during the retention interval and while the subscription is\nstill available."
                          },
                          {
                            "name": "CustomizedRecoverable_ProtectedSubscription",
                            "value": "CustomizedRecoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable,\nimmediate and permanent deletion (i.e. purge) is not permitted, and in which\nthe subscription itself cannot be permanently canceled when 7<=\nSoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the\ndeleted entity during the retention interval, and also reflects the fact that\nthe subscription itself cannot be cancelled."
                          }
                        ]
                      }
                    }
                  },
                  "allOf": [
                    {
                      "type": "object",
                      "description": "The object attributes managed by the KeyVault service.",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "Determines whether the object is enabled."
                        },
                        "nbf": {
                          "type": "string",
                          "format": "time",
                          "description": "Not before date in UTC.",
                          "x-ms-client-name": "notBefore"
                        },
                        "exp": {
                          "type": "string",
                          "format": "time",
                          "description": "Expiry date in UTC.",
                          "x-ms-client-name": "expires"
                        },
                        "created": {
                          "type": "string",
                          "format": "time",
                          "description": "Creation time in UTC.",
                          "readOnly": true
                        },
                        "updated": {
                          "type": "string",
                          "format": "time",
                          "description": "Last updated time in UTC.",
                          "readOnly": true
                        }
                      }
                    }
                  ]
                }
              },
              "required": [
                "value"
              ]
            },
            "x-ms-client-flatten": true
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "A secret consisting of a value, id and its attributes.",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "The secret value."
                },
                "id": {
                  "type": "string",
                  "description": "The secret id."
                },
                "contentType": {
                  "type": "string",
                  "description": "The content type of the secret."
                },
                "attributes": {
                  "type": "object",
                  "description": "The secret management attributes.",
                  "properties": {
                    "recoverableDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete\nenabled, otherwise 0.",
                      "readOnly": true
                    },
                    "recoveryLevel": {
                      "type": "string",
                      "description": "Reflects the deletion recovery level currently in effect for secrets in the\ncurrent vault. If it contains 'Purgeable', the secret can be permanently\ndeleted by a privileged user; otherwise, only the system can purge the secret,\nat the end of the retention interval.",
                      "enum": [
                        "Purgeable",
                        "Recoverable+Purgeable",
                        "Recoverable",
                        "Recoverable+ProtectedSubscription",
                        "CustomizedRecoverable+Purgeable",
                        "CustomizedRecoverable",
                        "CustomizedRecoverable+ProtectedSubscription"
                      ],
                      "x-ms-enum": {
                        "name": "DeletionRecoveryLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Purgeable",
                            "value": "Purgeable",
                            "description": "Denotes a vault state in which deletion is an irreversible operation, without\nthe possibility for recovery. This level corresponds to no protection being\navailable against a Delete operation; the data is irretrievably lost upon\naccepting a Delete operation at the entity level or higher (vault, resource\ngroup, subscription etc.)"
                          },
                          {
                            "name": "Recoverable_Purgeable",
                            "value": "Recoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits\nimmediate and permanent deletion (i.e. purge). This level guarantees the\nrecoverability of the deleted entity during the retention interval (90 days),\nunless a Purge operation is requested, or the subscription is cancelled. System\nwil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "name": "Recoverable",
                            "value": "Recoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility\nfor immediate and permanent deletion (i.e. purge). This level guarantees the\nrecoverability of the deleted entity during the retention interval(90 days) and\nwhile the subscription is still available. System wil permanently delete it\nafter 90 days, if not recovered"
                          },
                          {
                            "name": "Recoverable_ProtectedSubscription",
                            "value": "Recoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable within\nretention interval (90 days), immediate and permanent deletion (i.e. purge) is\nnot permitted, and in which the subscription itself  cannot be permanently\ncanceled. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "name": "CustomizedRecoverable_Purgeable",
                            "value": "CustomizedRecoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits\nimmediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays\n< 90). This level guarantees the recoverability of the deleted entity during\nthe retention interval, unless a Purge operation is requested, or the\nsubscription is cancelled."
                          },
                          {
                            "name": "CustomizedRecoverable",
                            "value": "CustomizedRecoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility\nfor immediate and permanent deletion (i.e. purge when 7<=\nSoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the\ndeleted entity during the retention interval and while the subscription is\nstill available."
                          },
                          {
                            "name": "CustomizedRecoverable_ProtectedSubscription",
                            "value": "CustomizedRecoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable,\nimmediate and permanent deletion (i.e. purge) is not permitted, and in which\nthe subscription itself cannot be permanently canceled when 7<=\nSoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the\ndeleted entity during the retention interval, and also reflects the fact that\nthe subscription itself cannot be cancelled."
                          }
                        ]
                      }
                    }
                  },
                  "allOf": [
                    {
                      "type": "object",
                      "description": "The object attributes managed by the KeyVault service.",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "Determines whether the object is enabled."
                        },
                        "nbf": {
                          "type": "string",
                          "format": "time",
                          "description": "Not before date in UTC.",
                          "x-ms-client-name": "notBefore"
                        },
                        "exp": {
                          "type": "string",
                          "format": "time",
                          "description": "Expiry date in UTC.",
                          "x-ms-client-name": "expires"
                        },
                        "created": {
                          "type": "string",
                          "format": "time",
                          "description": "Creation time in UTC.",
                          "readOnly": true
                        },
                        "updated": {
                          "type": "string",
                          "format": "time",
                          "description": "Last updated time in UTC.",
                          "readOnly": true
                        }
                      }
                    }
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Application specific metadata in the form of key-value pairs.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "kid": {
                  "type": "string",
                  "description": "If this is a secret backing a KV certificate, then this field specifies the\ncorresponding key backing the KV certificate.",
                  "readOnly": true
                },
                "managed": {
                  "type": "boolean",
                  "description": "True if the secret's lifetime is managed by key vault. If this is a secret\nbacking a certificate, then managed will be true.",
                  "readOnly": true
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "description": "A response containing error details.",
              "properties": {
                "error": {
                  "type": "object",
                  "description": "The error object.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "One of a server-defined set of error codes."
                    },
                    "message": {
                      "type": "string",
                      "description": "A human-readable representation of the error."
                    },
                    "target": {
                      "type": "string",
                      "description": "The target of the error."
                    },
                    "details": {
                      "type": "array",
                      "description": "An array of details about specific errors that led to this reported error.",
                      "items": {
                        "type": "object",
                        "description": "The error object.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "One of a server-defined set of error codes."
                          },
                          "message": {
                            "type": "string",
                            "description": "A human-readable representation of the error."
                          },
                          "target": {
                            "type": "string",
                            "description": "The target of the error."
                          },
                          "details": {
                            "type": "array",
                            "description": "An array of details about specific errors that led to this reported error.",
                            "items": {
                              "type": "object",
                              "description": "The error object.",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "One of a server-defined set of error codes."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "A human-readable representation of the error."
                                },
                                "target": {
                                  "type": "string",
                                  "description": "The target of the error."
                                },
                                "details": {
                                  "type": "array",
                                  "description": "An array of details about specific errors that led to this reported error.",
                                  "items": {
                                    "$ref": "#/definitions/Azure.Core.Foundations.Error"
                                  },
                                  "x-ms-identifiers": []
                                },
                                "innererror": {
                                  "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                                }
                              },
                              "required": [
                                "code",
                                "message"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "innererror": {
                            "type": "object",
                            "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "One of a server-defined set of error codes."
                              },
                              "innererror": {
                                "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                              }
                            }
                          }
                        },
                        "required": [
                          "code",
                          "message"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "innererror": {
                      "type": "object",
                      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "One of a server-defined set of error codes."
                        },
                        "innererror": {
                          "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "DeleteSecret",
        "summary": "Deletes a secret from a specified key vault.",
        "description": "The DELETE operation applies to any secret stored in Azure Key Vault. DELETE\ncannot be applied to an individual version of a secret. This operation requires\nthe secrets/delete permission.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "secretName",
            "in": "path",
            "description": "The name of the secret.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "A Deleted Secret consisting of its previous id, attributes and its tags, as\nwell as information on when it will be purged.",
              "properties": {
                "recoveryId": {
                  "type": "string",
                  "description": "The url of the recovery object, used to identify and recover the deleted secret."
                },
                "scheduledPurgeDate": {
                  "type": "string",
                  "format": "time",
                  "description": "The time when the secret is scheduled to be purged, in UTC",
                  "readOnly": true
                },
                "deletedDate": {
                  "type": "string",
                  "format": "time",
                  "description": "The time when the secret was deleted, in UTC",
                  "readOnly": true
                }
              },
              "allOf": [
                {
                  "type": "object",
                  "description": "A secret consisting of a value, id and its attributes.",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The secret value."
                    },
                    "id": {
                      "type": "string",
                      "description": "The secret id."
                    },
                    "contentType": {
                      "type": "string",
                      "description": "The content type of the secret."
                    },
                    "attributes": {
                      "type": "object",
                      "description": "The secret management attributes.",
                      "properties": {
                        "recoverableDays": {
                          "type": "integer",
                          "format": "int32",
                          "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete\nenabled, otherwise 0.",
                          "readOnly": true
                        },
                        "recoveryLevel": {
                          "type": "string",
                          "description": "Reflects the deletion recovery level currently in effect for secrets in the\ncurrent vault. If it contains 'Purgeable', the secret can be permanently\ndeleted by a privileged user; otherwise, only the system can purge the secret,\nat the end of the retention interval.",
                          "enum": [
                            "Purgeable",
                            "Recoverable+Purgeable",
                            "Recoverable",
                            "Recoverable+ProtectedSubscription",
                            "CustomizedRecoverable+Purgeable",
                            "CustomizedRecoverable",
                            "CustomizedRecoverable+ProtectedSubscription"
                          ],
                          "x-ms-enum": {
                            "name": "DeletionRecoveryLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Purgeable",
                                "value": "Purgeable",
                                "description": "Denotes a vault state in which deletion is an irreversible operation, without\nthe possibility for recovery. This level corresponds to no protection being\navailable against a Delete operation; the data is irretrievably lost upon\naccepting a Delete operation at the entity level or higher (vault, resource\ngroup, subscription etc.)"
                              },
                              {
                                "name": "Recoverable_Purgeable",
                                "value": "Recoverable+Purgeable",
                                "description": "Denotes a vault state in which deletion is recoverable, and which also permits\nimmediate and permanent deletion (i.e. purge). This level guarantees the\nrecoverability of the deleted entity during the retention interval (90 days),\nunless a Purge operation is requested, or the subscription is cancelled. System\nwil permanently delete it after 90 days, if not recovered"
                              },
                              {
                                "name": "Recoverable",
                                "value": "Recoverable",
                                "description": "Denotes a vault state in which deletion is recoverable without the possibility\nfor immediate and permanent deletion (i.e. purge). This level guarantees the\nrecoverability of the deleted entity during the retention interval(90 days) and\nwhile the subscription is still available. System wil permanently delete it\nafter 90 days, if not recovered"
                              },
                              {
                                "name": "Recoverable_ProtectedSubscription",
                                "value": "Recoverable+ProtectedSubscription",
                                "description": "Denotes a vault and subscription state in which deletion is recoverable within\nretention interval (90 days), immediate and permanent deletion (i.e. purge) is\nnot permitted, and in which the subscription itself  cannot be permanently\ncanceled. System wil permanently delete it after 90 days, if not recovered"
                              },
                              {
                                "name": "CustomizedRecoverable_Purgeable",
                                "value": "CustomizedRecoverable+Purgeable",
                                "description": "Denotes a vault state in which deletion is recoverable, and which also permits\nimmediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays\n< 90). This level guarantees the recoverability of the deleted entity during\nthe retention interval, unless a Purge operation is requested, or the\nsubscription is cancelled."
                              },
                              {
                                "name": "CustomizedRecoverable",
                                "value": "CustomizedRecoverable",
                                "description": "Denotes a vault state in which deletion is recoverable without the possibility\nfor immediate and permanent deletion (i.e. purge when 7<=\nSoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the\ndeleted entity during the retention interval and while the subscription is\nstill available."
                              },
                              {
                                "name": "CustomizedRecoverable_ProtectedSubscription",
                                "value": "CustomizedRecoverable+ProtectedSubscription",
                                "description": "Denotes a vault and subscription state in which deletion is recoverable,\nimmediate and permanent deletion (i.e. purge) is not permitted, and in which\nthe subscription itself cannot be permanently canceled when 7<=\nSoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the\ndeleted entity during the retention interval, and also reflects the fact that\nthe subscription itself cannot be cancelled."
                              }
                            ]
                          }
                        }
                      },
                      "allOf": [
                        {
                          "type": "object",
                          "description": "The object attributes managed by the KeyVault service.",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "description": "Determines whether the object is enabled."
                            },
                            "nbf": {
                              "type": "string",
                              "format": "time",
                              "description": "Not before date in UTC.",
                              "x-ms-client-name": "notBefore"
                            },
                            "exp": {
                              "type": "string",
                              "format": "time",
                              "description": "Expiry date in UTC.",
                              "x-ms-client-name": "expires"
                            },
                            "created": {
                              "type": "string",
                              "format": "time",
                              "description": "Creation time in UTC.",
                              "readOnly": true
                            },
                            "updated": {
                              "type": "string",
                              "format": "time",
                              "description": "Last updated time in UTC.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    },
                    "tags": {
                      "type": "object",
                      "description": "Application specific metadata in the form of key-value pairs.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "kid": {
                      "type": "string",
                      "description": "If this is a secret backing a KV certificate, then this field specifies the\ncorresponding key backing the KV certificate.",
                      "readOnly": true
                    },
                    "managed": {
                      "type": "boolean",
                      "description": "True if the secret's lifetime is managed by key vault. If this is a secret\nbacking a certificate, then managed will be true.",
                      "readOnly": true
                    }
                  }
                }
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "description": "A response containing error details.",
              "properties": {
                "error": {
                  "type": "object",
                  "description": "The error object.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "One of a server-defined set of error codes."
                    },
                    "message": {
                      "type": "string",
                      "description": "A human-readable representation of the error."
                    },
                    "target": {
                      "type": "string",
                      "description": "The target of the error."
                    },
                    "details": {
                      "type": "array",
                      "description": "An array of details about specific errors that led to this reported error.",
                      "items": {
                        "type": "object",
                        "description": "The error object.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "One of a server-defined set of error codes."
                          },
                          "message": {
                            "type": "string",
                            "description": "A human-readable representation of the error."
                          },
                          "target": {
                            "type": "string",
                            "description": "The target of the error."
                          },
                          "details": {
                            "type": "array",
                            "description": "An array of details about specific errors that led to this reported error.",
                            "items": {
                              "type": "object",
                              "description": "The error object.",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "One of a server-defined set of error codes."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "A human-readable representation of the error."
                                },
                                "target": {
                                  "type": "string",
                                  "description": "The target of the error."
                                },
                                "details": {
                                  "type": "array",
                                  "description": "An array of details about specific errors that led to this reported error.",
                                  "items": {
                                    "$ref": "#/definitions/Azure.Core.Foundations.Error"
                                  },
                                  "x-ms-identifiers": []
                                },
                                "innererror": {
                                  "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                                }
                              },
                              "required": [
                                "code",
                                "message"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "innererror": {
                            "type": "object",
                            "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "One of a server-defined set of error codes."
                              },
                              "innererror": {
                                "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                              }
                            }
                          }
                        },
                        "required": [
                          "code",
                          "message"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "innererror": {
                      "type": "object",
                      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "One of a server-defined set of error codes."
                        },
                        "innererror": {
                          "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    }
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/secrets/{secretName}/{secretVersion}"
    ],
    "rhs": {
      "get": {
        "operationId": "GetSecret",
        "summary": "Get a specified secret from a given key vault.",
        "description": "The GET operation is applicable to any secret stored in Azure Key Vault. This\noperation requires the secrets/get permission.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "secretName",
            "in": "path",
            "description": "The name of the secret.",
            "required": true,
            "type": "string"
          },
          {
            "name": "secretVersion",
            "in": "path",
            "description": "The version of the secret. This URI fragment is optional. If not specified, the\nlatest version of the secret is returned.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "A secret consisting of a value, id and its attributes.",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "The secret value."
                },
                "id": {
                  "type": "string",
                  "description": "The secret id."
                },
                "contentType": {
                  "type": "string",
                  "description": "The content type of the secret."
                },
                "attributes": {
                  "type": "object",
                  "description": "The secret management attributes.",
                  "properties": {
                    "recoverableDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete\nenabled, otherwise 0.",
                      "readOnly": true
                    },
                    "recoveryLevel": {
                      "type": "string",
                      "description": "Reflects the deletion recovery level currently in effect for secrets in the\ncurrent vault. If it contains 'Purgeable', the secret can be permanently\ndeleted by a privileged user; otherwise, only the system can purge the secret,\nat the end of the retention interval.",
                      "enum": [
                        "Purgeable",
                        "Recoverable+Purgeable",
                        "Recoverable",
                        "Recoverable+ProtectedSubscription",
                        "CustomizedRecoverable+Purgeable",
                        "CustomizedRecoverable",
                        "CustomizedRecoverable+ProtectedSubscription"
                      ],
                      "x-ms-enum": {
                        "name": "DeletionRecoveryLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Purgeable",
                            "value": "Purgeable",
                            "description": "Denotes a vault state in which deletion is an irreversible operation, without\nthe possibility for recovery. This level corresponds to no protection being\navailable against a Delete operation; the data is irretrievably lost upon\naccepting a Delete operation at the entity level or higher (vault, resource\ngroup, subscription etc.)"
                          },
                          {
                            "name": "Recoverable_Purgeable",
                            "value": "Recoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits\nimmediate and permanent deletion (i.e. purge). This level guarantees the\nrecoverability of the deleted entity during the retention interval (90 days),\nunless a Purge operation is requested, or the subscription is cancelled. System\nwil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "name": "Recoverable",
                            "value": "Recoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility\nfor immediate and permanent deletion (i.e. purge). This level guarantees the\nrecoverability of the deleted entity during the retention interval(90 days) and\nwhile the subscription is still available. System wil permanently delete it\nafter 90 days, if not recovered"
                          },
                          {
                            "name": "Recoverable_ProtectedSubscription",
                            "value": "Recoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable within\nretention interval (90 days), immediate and permanent deletion (i.e. purge) is\nnot permitted, and in which the subscription itself  cannot be permanently\ncanceled. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "name": "CustomizedRecoverable_Purgeable",
                            "value": "CustomizedRecoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits\nimmediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays\n< 90). This level guarantees the recoverability of the deleted entity during\nthe retention interval, unless a Purge operation is requested, or the\nsubscription is cancelled."
                          },
                          {
                            "name": "CustomizedRecoverable",
                            "value": "CustomizedRecoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility\nfor immediate and permanent deletion (i.e. purge when 7<=\nSoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the\ndeleted entity during the retention interval and while the subscription is\nstill available."
                          },
                          {
                            "name": "CustomizedRecoverable_ProtectedSubscription",
                            "value": "CustomizedRecoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable,\nimmediate and permanent deletion (i.e. purge) is not permitted, and in which\nthe subscription itself cannot be permanently canceled when 7<=\nSoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the\ndeleted entity during the retention interval, and also reflects the fact that\nthe subscription itself cannot be cancelled."
                          }
                        ]
                      }
                    }
                  },
                  "allOf": [
                    {
                      "type": "object",
                      "description": "The object attributes managed by the KeyVault service.",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "Determines whether the object is enabled."
                        },
                        "nbf": {
                          "type": "string",
                          "format": "time",
                          "description": "Not before date in UTC.",
                          "x-ms-client-name": "notBefore"
                        },
                        "exp": {
                          "type": "string",
                          "format": "time",
                          "description": "Expiry date in UTC.",
                          "x-ms-client-name": "expires"
                        },
                        "created": {
                          "type": "string",
                          "format": "time",
                          "description": "Creation time in UTC.",
                          "readOnly": true
                        },
                        "updated": {
                          "type": "string",
                          "format": "time",
                          "description": "Last updated time in UTC.",
                          "readOnly": true
                        }
                      }
                    }
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Application specific metadata in the form of key-value pairs.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "kid": {
                  "type": "string",
                  "description": "If this is a secret backing a KV certificate, then this field specifies the\ncorresponding key backing the KV certificate.",
                  "readOnly": true
                },
                "managed": {
                  "type": "boolean",
                  "description": "True if the secret's lifetime is managed by key vault. If this is a secret\nbacking a certificate, then managed will be true.",
                  "readOnly": true
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "description": "A response containing error details.",
              "properties": {
                "error": {
                  "type": "object",
                  "description": "The error object.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "One of a server-defined set of error codes."
                    },
                    "message": {
                      "type": "string",
                      "description": "A human-readable representation of the error."
                    },
                    "target": {
                      "type": "string",
                      "description": "The target of the error."
                    },
                    "details": {
                      "type": "array",
                      "description": "An array of details about specific errors that led to this reported error.",
                      "items": {
                        "type": "object",
                        "description": "The error object.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "One of a server-defined set of error codes."
                          },
                          "message": {
                            "type": "string",
                            "description": "A human-readable representation of the error."
                          },
                          "target": {
                            "type": "string",
                            "description": "The target of the error."
                          },
                          "details": {
                            "type": "array",
                            "description": "An array of details about specific errors that led to this reported error.",
                            "items": {
                              "type": "object",
                              "description": "The error object.",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "One of a server-defined set of error codes."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "A human-readable representation of the error."
                                },
                                "target": {
                                  "type": "string",
                                  "description": "The target of the error."
                                },
                                "details": {
                                  "type": "array",
                                  "description": "An array of details about specific errors that led to this reported error.",
                                  "items": {
                                    "$ref": "#/definitions/Azure.Core.Foundations.Error"
                                  },
                                  "x-ms-identifiers": []
                                },
                                "innererror": {
                                  "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                                }
                              },
                              "required": [
                                "code",
                                "message"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "innererror": {
                            "type": "object",
                            "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "One of a server-defined set of error codes."
                              },
                              "innererror": {
                                "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                              }
                            }
                          }
                        },
                        "required": [
                          "code",
                          "message"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "innererror": {
                      "type": "object",
                      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "One of a server-defined set of error codes."
                        },
                        "innererror": {
                          "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "UpdateSecret",
        "summary": "Updates the attributes associated with a specified secret in a given key vault.",
        "description": "The UPDATE operation changes specified attributes of an existing stored secret.\nAttributes that are not specified in the request are left unchanged. The value\nof a secret itself cannot be changed. This operation requires the secrets/set\npermission.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "secretName",
            "in": "path",
            "description": "The name of the secret.",
            "required": true,
            "type": "string"
          },
          {
            "name": "secretVersion",
            "in": "path",
            "description": "The version of the secret.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters for update secret operation.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The secret update parameters.",
              "properties": {
                "contentType": {
                  "type": "string",
                  "description": "Type of the secret value such as a password."
                },
                "attributes": {
                  "type": "object",
                  "description": "The secret management attributes.",
                  "properties": {
                    "recoverableDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete\nenabled, otherwise 0.",
                      "readOnly": true
                    },
                    "recoveryLevel": {
                      "type": "string",
                      "description": "Reflects the deletion recovery level currently in effect for secrets in the\ncurrent vault. If it contains 'Purgeable', the secret can be permanently\ndeleted by a privileged user; otherwise, only the system can purge the secret,\nat the end of the retention interval.",
                      "enum": [
                        "Purgeable",
                        "Recoverable+Purgeable",
                        "Recoverable",
                        "Recoverable+ProtectedSubscription",
                        "CustomizedRecoverable+Purgeable",
                        "CustomizedRecoverable",
                        "CustomizedRecoverable+ProtectedSubscription"
                      ],
                      "x-ms-enum": {
                        "name": "DeletionRecoveryLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Purgeable",
                            "value": "Purgeable",
                            "description": "Denotes a vault state in which deletion is an irreversible operation, without\nthe possibility for recovery. This level corresponds to no protection being\navailable against a Delete operation; the data is irretrievably lost upon\naccepting a Delete operation at the entity level or higher (vault, resource\ngroup, subscription etc.)"
                          },
                          {
                            "name": "Recoverable_Purgeable",
                            "value": "Recoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits\nimmediate and permanent deletion (i.e. purge). This level guarantees the\nrecoverability of the deleted entity during the retention interval (90 days),\nunless a Purge operation is requested, or the subscription is cancelled. System\nwil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "name": "Recoverable",
                            "value": "Recoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility\nfor immediate and permanent deletion (i.e. purge). This level guarantees the\nrecoverability of the deleted entity during the retention interval(90 days) and\nwhile the subscription is still available. System wil permanently delete it\nafter 90 days, if not recovered"
                          },
                          {
                            "name": "Recoverable_ProtectedSubscription",
                            "value": "Recoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable within\nretention interval (90 days), immediate and permanent deletion (i.e. purge) is\nnot permitted, and in which the subscription itself  cannot be permanently\ncanceled. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "name": "CustomizedRecoverable_Purgeable",
                            "value": "CustomizedRecoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits\nimmediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays\n< 90). This level guarantees the recoverability of the deleted entity during\nthe retention interval, unless a Purge operation is requested, or the\nsubscription is cancelled."
                          },
                          {
                            "name": "CustomizedRecoverable",
                            "value": "CustomizedRecoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility\nfor immediate and permanent deletion (i.e. purge when 7<=\nSoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the\ndeleted entity during the retention interval and while the subscription is\nstill available."
                          },
                          {
                            "name": "CustomizedRecoverable_ProtectedSubscription",
                            "value": "CustomizedRecoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable,\nimmediate and permanent deletion (i.e. purge) is not permitted, and in which\nthe subscription itself cannot be permanently canceled when 7<=\nSoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the\ndeleted entity during the retention interval, and also reflects the fact that\nthe subscription itself cannot be cancelled."
                          }
                        ]
                      }
                    }
                  },
                  "allOf": [
                    {
                      "type": "object",
                      "description": "The object attributes managed by the KeyVault service.",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "Determines whether the object is enabled."
                        },
                        "nbf": {
                          "type": "string",
                          "format": "time",
                          "description": "Not before date in UTC.",
                          "x-ms-client-name": "notBefore"
                        },
                        "exp": {
                          "type": "string",
                          "format": "time",
                          "description": "Expiry date in UTC.",
                          "x-ms-client-name": "expires"
                        },
                        "created": {
                          "type": "string",
                          "format": "time",
                          "description": "Creation time in UTC.",
                          "readOnly": true
                        },
                        "updated": {
                          "type": "string",
                          "format": "time",
                          "description": "Last updated time in UTC.",
                          "readOnly": true
                        }
                      }
                    }
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Application specific metadata in the form of key-value pairs.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "x-ms-client-flatten": true
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "A secret consisting of a value, id and its attributes.",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "The secret value."
                },
                "id": {
                  "type": "string",
                  "description": "The secret id."
                },
                "contentType": {
                  "type": "string",
                  "description": "The content type of the secret."
                },
                "attributes": {
                  "type": "object",
                  "description": "The secret management attributes.",
                  "properties": {
                    "recoverableDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete\nenabled, otherwise 0.",
                      "readOnly": true
                    },
                    "recoveryLevel": {
                      "type": "string",
                      "description": "Reflects the deletion recovery level currently in effect for secrets in the\ncurrent vault. If it contains 'Purgeable', the secret can be permanently\ndeleted by a privileged user; otherwise, only the system can purge the secret,\nat the end of the retention interval.",
                      "enum": [
                        "Purgeable",
                        "Recoverable+Purgeable",
                        "Recoverable",
                        "Recoverable+ProtectedSubscription",
                        "CustomizedRecoverable+Purgeable",
                        "CustomizedRecoverable",
                        "CustomizedRecoverable+ProtectedSubscription"
                      ],
                      "x-ms-enum": {
                        "name": "DeletionRecoveryLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Purgeable",
                            "value": "Purgeable",
                            "description": "Denotes a vault state in which deletion is an irreversible operation, without\nthe possibility for recovery. This level corresponds to no protection being\navailable against a Delete operation; the data is irretrievably lost upon\naccepting a Delete operation at the entity level or higher (vault, resource\ngroup, subscription etc.)"
                          },
                          {
                            "name": "Recoverable_Purgeable",
                            "value": "Recoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits\nimmediate and permanent deletion (i.e. purge). This level guarantees the\nrecoverability of the deleted entity during the retention interval (90 days),\nunless a Purge operation is requested, or the subscription is cancelled. System\nwil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "name": "Recoverable",
                            "value": "Recoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility\nfor immediate and permanent deletion (i.e. purge). This level guarantees the\nrecoverability of the deleted entity during the retention interval(90 days) and\nwhile the subscription is still available. System wil permanently delete it\nafter 90 days, if not recovered"
                          },
                          {
                            "name": "Recoverable_ProtectedSubscription",
                            "value": "Recoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable within\nretention interval (90 days), immediate and permanent deletion (i.e. purge) is\nnot permitted, and in which the subscription itself  cannot be permanently\ncanceled. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "name": "CustomizedRecoverable_Purgeable",
                            "value": "CustomizedRecoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits\nimmediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays\n< 90). This level guarantees the recoverability of the deleted entity during\nthe retention interval, unless a Purge operation is requested, or the\nsubscription is cancelled."
                          },
                          {
                            "name": "CustomizedRecoverable",
                            "value": "CustomizedRecoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility\nfor immediate and permanent deletion (i.e. purge when 7<=\nSoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the\ndeleted entity during the retention interval and while the subscription is\nstill available."
                          },
                          {
                            "name": "CustomizedRecoverable_ProtectedSubscription",
                            "value": "CustomizedRecoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable,\nimmediate and permanent deletion (i.e. purge) is not permitted, and in which\nthe subscription itself cannot be permanently canceled when 7<=\nSoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the\ndeleted entity during the retention interval, and also reflects the fact that\nthe subscription itself cannot be cancelled."
                          }
                        ]
                      }
                    }
                  },
                  "allOf": [
                    {
                      "type": "object",
                      "description": "The object attributes managed by the KeyVault service.",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "Determines whether the object is enabled."
                        },
                        "nbf": {
                          "type": "string",
                          "format": "time",
                          "description": "Not before date in UTC.",
                          "x-ms-client-name": "notBefore"
                        },
                        "exp": {
                          "type": "string",
                          "format": "time",
                          "description": "Expiry date in UTC.",
                          "x-ms-client-name": "expires"
                        },
                        "created": {
                          "type": "string",
                          "format": "time",
                          "description": "Creation time in UTC.",
                          "readOnly": true
                        },
                        "updated": {
                          "type": "string",
                          "format": "time",
                          "description": "Last updated time in UTC.",
                          "readOnly": true
                        }
                      }
                    }
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Application specific metadata in the form of key-value pairs.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "kid": {
                  "type": "string",
                  "description": "If this is a secret backing a KV certificate, then this field specifies the\ncorresponding key backing the KV certificate.",
                  "readOnly": true
                },
                "managed": {
                  "type": "boolean",
                  "description": "True if the secret's lifetime is managed by key vault. If this is a secret\nbacking a certificate, then managed will be true.",
                  "readOnly": true
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "description": "A response containing error details.",
              "properties": {
                "error": {
                  "type": "object",
                  "description": "The error object.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "One of a server-defined set of error codes."
                    },
                    "message": {
                      "type": "string",
                      "description": "A human-readable representation of the error."
                    },
                    "target": {
                      "type": "string",
                      "description": "The target of the error."
                    },
                    "details": {
                      "type": "array",
                      "description": "An array of details about specific errors that led to this reported error.",
                      "items": {
                        "type": "object",
                        "description": "The error object.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "One of a server-defined set of error codes."
                          },
                          "message": {
                            "type": "string",
                            "description": "A human-readable representation of the error."
                          },
                          "target": {
                            "type": "string",
                            "description": "The target of the error."
                          },
                          "details": {
                            "type": "array",
                            "description": "An array of details about specific errors that led to this reported error.",
                            "items": {
                              "type": "object",
                              "description": "The error object.",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "One of a server-defined set of error codes."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "A human-readable representation of the error."
                                },
                                "target": {
                                  "type": "string",
                                  "description": "The target of the error."
                                },
                                "details": {
                                  "type": "array",
                                  "description": "An array of details about specific errors that led to this reported error.",
                                  "items": {
                                    "$ref": "#/definitions/Azure.Core.Foundations.Error"
                                  },
                                  "x-ms-identifiers": []
                                },
                                "innererror": {
                                  "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                                }
                              },
                              "required": [
                                "code",
                                "message"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "innererror": {
                            "type": "object",
                            "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "One of a server-defined set of error codes."
                              },
                              "innererror": {
                                "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                              }
                            }
                          }
                        },
                        "required": [
                          "code",
                          "message"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "innererror": {
                      "type": "object",
                      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "One of a server-defined set of error codes."
                        },
                        "innererror": {
                          "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    }
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/secrets/{secretName}/backup"
    ],
    "rhs": {
      "post": {
        "operationId": "BackupSecret",
        "summary": "Backs up the specified secret.",
        "description": "Requests that a backup of the specified secret be downloaded to the client. All\nversions of the secret will be downloaded. This operation requires the\nsecrets/backup permission.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "secretName",
            "in": "path",
            "description": "The name of the secret.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "The backup secret result, containing the backup blob.",
              "properties": {
                "value": {
                  "type": "string",
                  "format": "byte",
                  "description": "The backup blob containing the backed up secret.",
                  "readOnly": true
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "description": "A response containing error details.",
              "properties": {
                "error": {
                  "type": "object",
                  "description": "The error object.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "One of a server-defined set of error codes."
                    },
                    "message": {
                      "type": "string",
                      "description": "A human-readable representation of the error."
                    },
                    "target": {
                      "type": "string",
                      "description": "The target of the error."
                    },
                    "details": {
                      "type": "array",
                      "description": "An array of details about specific errors that led to this reported error.",
                      "items": {
                        "type": "object",
                        "description": "The error object.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "One of a server-defined set of error codes."
                          },
                          "message": {
                            "type": "string",
                            "description": "A human-readable representation of the error."
                          },
                          "target": {
                            "type": "string",
                            "description": "The target of the error."
                          },
                          "details": {
                            "type": "array",
                            "description": "An array of details about specific errors that led to this reported error.",
                            "items": {
                              "type": "object",
                              "description": "The error object.",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "One of a server-defined set of error codes."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "A human-readable representation of the error."
                                },
                                "target": {
                                  "type": "string",
                                  "description": "The target of the error."
                                },
                                "details": {
                                  "type": "array",
                                  "description": "An array of details about specific errors that led to this reported error.",
                                  "items": {
                                    "$ref": "#/definitions/Azure.Core.Foundations.Error"
                                  },
                                  "x-ms-identifiers": []
                                },
                                "innererror": {
                                  "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                                }
                              },
                              "required": [
                                "code",
                                "message"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "innererror": {
                            "type": "object",
                            "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "One of a server-defined set of error codes."
                              },
                              "innererror": {
                                "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                              }
                            }
                          }
                        },
                        "required": [
                          "code",
                          "message"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "innererror": {
                      "type": "object",
                      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "One of a server-defined set of error codes."
                        },
                        "innererror": {
                          "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    }
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/secrets/{secretName}/versions"
    ],
    "rhs": {
      "get": {
        "operationId": "GetSecretVersions",
        "summary": "List all versions of the specified secret.",
        "description": "The full secret identifier and attributes are provided in the response. No\nvalues are returned for the secrets. This operations requires the secrets/list\npermission.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "secretName",
            "in": "path",
            "description": "The name of the secret.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "The secret list result.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The SecretItem items on this page",
                  "items": {
                    "type": "object",
                    "description": "The secret item containing secret metadata.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Secret identifier."
                      },
                      "attributes": {
                        "type": "object",
                        "description": "The secret management attributes.",
                        "properties": {
                          "recoverableDays": {
                            "type": "integer",
                            "format": "int32",
                            "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete\nenabled, otherwise 0.",
                            "readOnly": true
                          },
                          "recoveryLevel": {
                            "type": "string",
                            "description": "Reflects the deletion recovery level currently in effect for secrets in the\ncurrent vault. If it contains 'Purgeable', the secret can be permanently\ndeleted by a privileged user; otherwise, only the system can purge the secret,\nat the end of the retention interval.",
                            "enum": [
                              "Purgeable",
                              "Recoverable+Purgeable",
                              "Recoverable",
                              "Recoverable+ProtectedSubscription",
                              "CustomizedRecoverable+Purgeable",
                              "CustomizedRecoverable",
                              "CustomizedRecoverable+ProtectedSubscription"
                            ],
                            "x-ms-enum": {
                              "name": "DeletionRecoveryLevel",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Purgeable",
                                  "value": "Purgeable",
                                  "description": "Denotes a vault state in which deletion is an irreversible operation, without\nthe possibility for recovery. This level corresponds to no protection being\navailable against a Delete operation; the data is irretrievably lost upon\naccepting a Delete operation at the entity level or higher (vault, resource\ngroup, subscription etc.)"
                                },
                                {
                                  "name": "Recoverable_Purgeable",
                                  "value": "Recoverable+Purgeable",
                                  "description": "Denotes a vault state in which deletion is recoverable, and which also permits\nimmediate and permanent deletion (i.e. purge). This level guarantees the\nrecoverability of the deleted entity during the retention interval (90 days),\nunless a Purge operation is requested, or the subscription is cancelled. System\nwil permanently delete it after 90 days, if not recovered"
                                },
                                {
                                  "name": "Recoverable",
                                  "value": "Recoverable",
                                  "description": "Denotes a vault state in which deletion is recoverable without the possibility\nfor immediate and permanent deletion (i.e. purge). This level guarantees the\nrecoverability of the deleted entity during the retention interval(90 days) and\nwhile the subscription is still available. System wil permanently delete it\nafter 90 days, if not recovered"
                                },
                                {
                                  "name": "Recoverable_ProtectedSubscription",
                                  "value": "Recoverable+ProtectedSubscription",
                                  "description": "Denotes a vault and subscription state in which deletion is recoverable within\nretention interval (90 days), immediate and permanent deletion (i.e. purge) is\nnot permitted, and in which the subscription itself  cannot be permanently\ncanceled. System wil permanently delete it after 90 days, if not recovered"
                                },
                                {
                                  "name": "CustomizedRecoverable_Purgeable",
                                  "value": "CustomizedRecoverable+Purgeable",
                                  "description": "Denotes a vault state in which deletion is recoverable, and which also permits\nimmediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays\n< 90). This level guarantees the recoverability of the deleted entity during\nthe retention interval, unless a Purge operation is requested, or the\nsubscription is cancelled."
                                },
                                {
                                  "name": "CustomizedRecoverable",
                                  "value": "CustomizedRecoverable",
                                  "description": "Denotes a vault state in which deletion is recoverable without the possibility\nfor immediate and permanent deletion (i.e. purge when 7<=\nSoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the\ndeleted entity during the retention interval and while the subscription is\nstill available."
                                },
                                {
                                  "name": "CustomizedRecoverable_ProtectedSubscription",
                                  "value": "CustomizedRecoverable+ProtectedSubscription",
                                  "description": "Denotes a vault and subscription state in which deletion is recoverable,\nimmediate and permanent deletion (i.e. purge) is not permitted, and in which\nthe subscription itself cannot be permanently canceled when 7<=\nSoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the\ndeleted entity during the retention interval, and also reflects the fact that\nthe subscription itself cannot be cancelled."
                                }
                              ]
                            }
                          }
                        },
                        "allOf": [
                          {
                            "type": "object",
                            "description": "The object attributes managed by the KeyVault service.",
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "description": "Determines whether the object is enabled."
                              },
                              "nbf": {
                                "type": "string",
                                "format": "time",
                                "description": "Not before date in UTC.",
                                "x-ms-client-name": "notBefore"
                              },
                              "exp": {
                                "type": "string",
                                "format": "time",
                                "description": "Expiry date in UTC.",
                                "x-ms-client-name": "expires"
                              },
                              "created": {
                                "type": "string",
                                "format": "time",
                                "description": "Creation time in UTC.",
                                "readOnly": true
                              },
                              "updated": {
                                "type": "string",
                                "format": "time",
                                "description": "Last updated time in UTC.",
                                "readOnly": true
                              }
                            }
                          }
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "description": "Application specific metadata in the form of key-value pairs.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "contentType": {
                        "type": "string",
                        "description": "Type of the secret value such as a password."
                      },
                      "managed": {
                        "type": "boolean",
                        "description": "True if the secret's lifetime is managed by key vault. If this is a key backing\na certificate, then managed will be true.",
                        "readOnly": true
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "description": "A response containing error details.",
              "properties": {
                "error": {
                  "type": "object",
                  "description": "The error object.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "One of a server-defined set of error codes."
                    },
                    "message": {
                      "type": "string",
                      "description": "A human-readable representation of the error."
                    },
                    "target": {
                      "type": "string",
                      "description": "The target of the error."
                    },
                    "details": {
                      "type": "array",
                      "description": "An array of details about specific errors that led to this reported error.",
                      "items": {
                        "type": "object",
                        "description": "The error object.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "One of a server-defined set of error codes."
                          },
                          "message": {
                            "type": "string",
                            "description": "A human-readable representation of the error."
                          },
                          "target": {
                            "type": "string",
                            "description": "The target of the error."
                          },
                          "details": {
                            "type": "array",
                            "description": "An array of details about specific errors that led to this reported error.",
                            "items": {
                              "type": "object",
                              "description": "The error object.",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "One of a server-defined set of error codes."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "A human-readable representation of the error."
                                },
                                "target": {
                                  "type": "string",
                                  "description": "The target of the error."
                                },
                                "details": {
                                  "type": "array",
                                  "description": "An array of details about specific errors that led to this reported error.",
                                  "items": {
                                    "$ref": "#/definitions/Azure.Core.Foundations.Error"
                                  },
                                  "x-ms-identifiers": []
                                },
                                "innererror": {
                                  "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                                }
                              },
                              "required": [
                                "code",
                                "message"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "innererror": {
                            "type": "object",
                            "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "One of a server-defined set of error codes."
                              },
                              "innererror": {
                                "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                              }
                            }
                          }
                        },
                        "required": [
                          "code",
                          "message"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "innererror": {
                      "type": "object",
                      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "One of a server-defined set of error codes."
                        },
                        "innererror": {
                          "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/secrets/restore"
    ],
    "rhs": {
      "post": {
        "operationId": "RestoreSecret",
        "summary": "Restores a backed up secret to a vault.",
        "description": "Restores a backed up secret, and all its versions, to a vault. This operation\nrequires the secrets/restore permission.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The secret restore parameters.",
              "properties": {
                "value": {
                  "type": "string",
                  "format": "byte",
                  "description": "The backup blob associated with a secret bundle.",
                  "x-ms-client-name": "secretBundleBackup"
                }
              },
              "required": [
                "value"
              ]
            },
            "x-ms-client-flatten": true
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "A secret consisting of a value, id and its attributes.",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "The secret value."
                },
                "id": {
                  "type": "string",
                  "description": "The secret id."
                },
                "contentType": {
                  "type": "string",
                  "description": "The content type of the secret."
                },
                "attributes": {
                  "type": "object",
                  "description": "The secret management attributes.",
                  "properties": {
                    "recoverableDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "softDelete data retention days. Value should be >=7 and <=90 when softDelete\nenabled, otherwise 0.",
                      "readOnly": true
                    },
                    "recoveryLevel": {
                      "type": "string",
                      "description": "Reflects the deletion recovery level currently in effect for secrets in the\ncurrent vault. If it contains 'Purgeable', the secret can be permanently\ndeleted by a privileged user; otherwise, only the system can purge the secret,\nat the end of the retention interval.",
                      "enum": [
                        "Purgeable",
                        "Recoverable+Purgeable",
                        "Recoverable",
                        "Recoverable+ProtectedSubscription",
                        "CustomizedRecoverable+Purgeable",
                        "CustomizedRecoverable",
                        "CustomizedRecoverable+ProtectedSubscription"
                      ],
                      "x-ms-enum": {
                        "name": "DeletionRecoveryLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Purgeable",
                            "value": "Purgeable",
                            "description": "Denotes a vault state in which deletion is an irreversible operation, without\nthe possibility for recovery. This level corresponds to no protection being\navailable against a Delete operation; the data is irretrievably lost upon\naccepting a Delete operation at the entity level or higher (vault, resource\ngroup, subscription etc.)"
                          },
                          {
                            "name": "Recoverable_Purgeable",
                            "value": "Recoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits\nimmediate and permanent deletion (i.e. purge). This level guarantees the\nrecoverability of the deleted entity during the retention interval (90 days),\nunless a Purge operation is requested, or the subscription is cancelled. System\nwil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "name": "Recoverable",
                            "value": "Recoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility\nfor immediate and permanent deletion (i.e. purge). This level guarantees the\nrecoverability of the deleted entity during the retention interval(90 days) and\nwhile the subscription is still available. System wil permanently delete it\nafter 90 days, if not recovered"
                          },
                          {
                            "name": "Recoverable_ProtectedSubscription",
                            "value": "Recoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable within\nretention interval (90 days), immediate and permanent deletion (i.e. purge) is\nnot permitted, and in which the subscription itself  cannot be permanently\ncanceled. System wil permanently delete it after 90 days, if not recovered"
                          },
                          {
                            "name": "CustomizedRecoverable_Purgeable",
                            "value": "CustomizedRecoverable+Purgeable",
                            "description": "Denotes a vault state in which deletion is recoverable, and which also permits\nimmediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays\n< 90). This level guarantees the recoverability of the deleted entity during\nthe retention interval, unless a Purge operation is requested, or the\nsubscription is cancelled."
                          },
                          {
                            "name": "CustomizedRecoverable",
                            "value": "CustomizedRecoverable",
                            "description": "Denotes a vault state in which deletion is recoverable without the possibility\nfor immediate and permanent deletion (i.e. purge when 7<=\nSoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the\ndeleted entity during the retention interval and while the subscription is\nstill available."
                          },
                          {
                            "name": "CustomizedRecoverable_ProtectedSubscription",
                            "value": "CustomizedRecoverable+ProtectedSubscription",
                            "description": "Denotes a vault and subscription state in which deletion is recoverable,\nimmediate and permanent deletion (i.e. purge) is not permitted, and in which\nthe subscription itself cannot be permanently canceled when 7<=\nSoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the\ndeleted entity during the retention interval, and also reflects the fact that\nthe subscription itself cannot be cancelled."
                          }
                        ]
                      }
                    }
                  },
                  "allOf": [
                    {
                      "type": "object",
                      "description": "The object attributes managed by the KeyVault service.",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "Determines whether the object is enabled."
                        },
                        "nbf": {
                          "type": "string",
                          "format": "time",
                          "description": "Not before date in UTC.",
                          "x-ms-client-name": "notBefore"
                        },
                        "exp": {
                          "type": "string",
                          "format": "time",
                          "description": "Expiry date in UTC.",
                          "x-ms-client-name": "expires"
                        },
                        "created": {
                          "type": "string",
                          "format": "time",
                          "description": "Creation time in UTC.",
                          "readOnly": true
                        },
                        "updated": {
                          "type": "string",
                          "format": "time",
                          "description": "Last updated time in UTC.",
                          "readOnly": true
                        }
                      }
                    }
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Application specific metadata in the form of key-value pairs.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "kid": {
                  "type": "string",
                  "description": "If this is a secret backing a KV certificate, then this field specifies the\ncorresponding key backing the KV certificate.",
                  "readOnly": true
                },
                "managed": {
                  "type": "boolean",
                  "description": "True if the secret's lifetime is managed by key vault. If this is a secret\nbacking a certificate, then managed will be true.",
                  "readOnly": true
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "description": "A response containing error details.",
              "properties": {
                "error": {
                  "type": "object",
                  "description": "The error object.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "One of a server-defined set of error codes."
                    },
                    "message": {
                      "type": "string",
                      "description": "A human-readable representation of the error."
                    },
                    "target": {
                      "type": "string",
                      "description": "The target of the error."
                    },
                    "details": {
                      "type": "array",
                      "description": "An array of details about specific errors that led to this reported error.",
                      "items": {
                        "type": "object",
                        "description": "The error object.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "One of a server-defined set of error codes."
                          },
                          "message": {
                            "type": "string",
                            "description": "A human-readable representation of the error."
                          },
                          "target": {
                            "type": "string",
                            "description": "The target of the error."
                          },
                          "details": {
                            "type": "array",
                            "description": "An array of details about specific errors that led to this reported error.",
                            "items": {
                              "type": "object",
                              "description": "The error object.",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "One of a server-defined set of error codes."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "A human-readable representation of the error."
                                },
                                "target": {
                                  "type": "string",
                                  "description": "The target of the error."
                                },
                                "details": {
                                  "type": "array",
                                  "description": "An array of details about specific errors that led to this reported error.",
                                  "items": {
                                    "$ref": "#/definitions/Azure.Core.Foundations.Error"
                                  },
                                  "x-ms-identifiers": []
                                },
                                "innererror": {
                                  "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                                }
                              },
                              "required": [
                                "code",
                                "message"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "innererror": {
                            "type": "object",
                            "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "One of a server-defined set of error codes."
                              },
                              "innererror": {
                                "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                              }
                            }
                          }
                        },
                        "required": [
                          "code",
                          "message"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "innererror": {
                      "type": "object",
                      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "One of a server-defined set of error codes."
                        },
                        "innererror": {
                          "$ref": "#/definitions/Azure.Core.Foundations.InnerError"
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    }
  },
  {
    "kind": "N",
    "path": [
      "schemes"
    ],
    "rhs": [
      "https"
    ]
  },
  {
    "kind": "N",
    "path": [
      "security"
    ],
    "rhs": [
      {
        "OAuth2Auth": [
          "https://vault.azure.net/.default"
        ]
      }
    ]
  },
  {
    "kind": "N",
    "path": [
      "securityDefinitions"
    ],
    "rhs": {
      "OAuth2Auth": {
        "type": "oauth2",
        "flow": "implicit",
        "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
        "scopes": {
          "https://vault.azure.net/.default": ""
        }
      }
    }
  },
  {
    "kind": "N",
    "path": [
      "tags"
    ],
    "rhs": []
  },
  {
    "kind": "N",
    "path": [
      "parameters"
    ],
    "rhs": {
      "Azure.Core.Foundations.ApiVersionParameter": {
        "name": "api-version",
        "in": "query",
        "description": "The API version to use for this operation.",
        "required": true,
        "type": "string",
        "minLength": 1,
        "x-ms-parameter-location": "method",
        "x-ms-client-name": "apiVersion"
      }
    }
  }
]